for (i in runs){
filename <- paste0(dir_in, list.files(dir_in, pattern=".log")[i])
probs[i,2:4] <- readTrace(filename, burnin = 0.1)[[1]] %>%
select(`theta[1]`, `theta[2]`, `stv[1]`, `stv[2]`,
`halflife[1]`, `halflife[2]`) %>%
mutate(dtheta = ifelse(`theta[1]` > `theta[2]`, 1, 0),
dstv = ifelse(`stv[1]` > `stv[2]`, 1, 0),
dhalflife = ifelse(`halflife[1]` > `halflife[2]`, 1, 0)) %>%
summarise(ptheta12 = mean(dtheta),
pstv12 = mean(dstv),
phalflife12 = mean(dhalflife)) %>%
#unlist() %>%
unname()
setTxtProgressBar(bar, i / num_run)
}
probs
probs %>% summarise(ptheta = mean(ptheta12),
pstv = mean(pstv12),
phl = mean(phalflife12))
# specify input and output directories
dir_in="output/3_empirical/sdOU_r500_picky/"
dir_out="figures/3_empirical/sdOU_r500_picky/"
num_run = length(list.files(dir_in, pattern=".log"))
probs <- tibble(run = 1:num_run, ptheta12 = 0, pstv12 = 0, phalflife12 = 0)
bar = txtProgressBar(style=3, width=40)
for (i in 1:num_run){
filename <- paste0(dir_in, list.files(dir_in, pattern=".log")[i])
probs[i,2:4] <- readTrace(filename, burnin = 0.1)[[1]] %>%
select(`theta[1]`, `theta[2]`, `stv[1]`, `stv[2]`,
`halflife[1]`, `halflife[2]`) %>%
mutate(dtheta = ifelse(`theta[1]` > `theta[2]`, 1, 0),
dstv = ifelse(`stv[1]` > `stv[2]`, 1, 0),
dhalflife = ifelse(`halflife[1]` > `halflife[2]`, 1, 0)) %>%
summarise(ptheta12 = mean(dtheta),
pstv12 = mean(dstv),
phalflife12 = mean(dhalflife)) %>%
#unlist() %>%
unname()
setTxtProgressBar(bar, i / num_run)
}
probs %>% summarise(ptheta = mean(ptheta12),
pstv = mean(pstv12),
phl = mean(phalflife12))
#num_run = length(list.files(dir_in, pattern=".log"))
runs = c(2, 4, 5)
probs <- tibble(run = 1:num_run, ptheta12 = 0, pstv12 = 0, phalflife12 = 0)
bar = txtProgressBar(style=3, width=40)
probs <- tibble(run = 1:length(runs), ptheta12 = 0, pstv12 = 0, phalflife12 = 0)
# specify input and output directories
dir_in="output/3_empirical/sdOU_r500_carnivory/"
dir_out="figures/3_empirical/sdOU_carnivory/"
runs = c(1, 3, 4, 5)
probs <- tibble(run = 1:length(runs), ptheta12 = 0, pstv12 = 0, phalflife12 = 0)
bar = txtProgressBar(style=3, width=40)
for (i in runs){
filename <- paste0(dir_in, list.files(dir_in, pattern=".log")[i])
probs[i,2:4] <- readTrace(filename, burnin = 0.1)[[1]] %>%
select(`theta[1]`, `theta[2]`, `stv[1]`, `stv[2]`,
`halflife[1]`, `halflife[2]`) %>%
mutate(dtheta = ifelse(`theta[1]` > `theta[2]`, 1, 0),
dstv = ifelse(`stv[1]` > `stv[2]`, 1, 0),
dhalflife = ifelse(`halflife[1]` > `halflife[2]`, 1, 0)) %>%
summarise(ptheta12 = mean(dtheta),
pstv12 = mean(dstv),
phalflife12 = mean(dhalflife)) %>%
#unlist() %>%
unname()
setTxtProgressBar(bar, i / num_run)
}
probs %>% summarise(ptheta = mean(ptheta12),
pstv = mean(pstv12),
phl = mean(phalflife12))
probs
runs = c(1, 3, 4, 5)
probs <- tibble(run = 1:length(runs), ptheta12 = 0, pstv12 = 0, phalflife12 = 0)
bar = txtProgressBar(style=3, width=40)
for (i in 1:length(runs)){
filename <- paste0(dir_in, list.files(dir_in, pattern=".log")[runs[i]])
probs[i,2:4] <- readTrace(filename, burnin = 0.1)[[1]] %>%
select(`theta[1]`, `theta[2]`, `stv[1]`, `stv[2]`,
`halflife[1]`, `halflife[2]`) %>%
mutate(dtheta = ifelse(`theta[1]` > `theta[2]`, 1, 0),
dstv = ifelse(`stv[1]` > `stv[2]`, 1, 0),
dhalflife = ifelse(`halflife[1]` > `halflife[2]`, 1, 0)) %>%
summarise(ptheta12 = mean(dtheta),
pstv12 = mean(dstv),
phalflife12 = mean(dhalflife)) %>%
#unlist() %>%
unname()
setTxtProgressBar(bar, i / num_run)
}
probs
probs %>% summarise(ptheta = mean(ptheta12),
pstv = mean(pstv12),
phl = mean(phalflife12))
# specify input and output directories
dir_in="output/3_empirical/sdOU_r500_picky/"
dir_out="figures/3_empirical/sdOU_r500_picky/"
#num_run = length(list.files(dir_in, pattern=".log"))
runs = c(2, 4, 5)
probs <- tibble(run = 1:length(runs), ptheta12 = 0, pstv12 = 0, phalflife12 = 0)
bar = txtProgressBar(style=3, width=40)
for (i in 1:length(runs)){
filename <- paste0(dir_in, list.files(dir_in, pattern=".log")[runs[i]])
probs[i,2:4] <- readTrace(filename, burnin = 0.1)[[1]] %>%
select(`theta[1]`, `theta[2]`, `stv[1]`, `stv[2]`,
`halflife[1]`, `halflife[2]`) %>%
mutate(dtheta = ifelse(`theta[1]` > `theta[2]`, 1, 0),
dstv = ifelse(`stv[1]` > `stv[2]`, 1, 0),
dhalflife = ifelse(`halflife[1]` > `halflife[2]`, 1, 0)) %>%
summarise(ptheta12 = mean(dtheta),
pstv12 = mean(dstv),
phalflife12 = mean(dhalflife)) %>%
#unlist() %>%
unname()
setTxtProgressBar(bar, i / num_run)
}
probs
#num_run = length(list.files(dir_in, pattern=".log"))
runs = c(2, 4, 5)
probs <- tibble(run = 1:length(runs), ptheta12 = 0, pstv12 = 0, phalflife12 = 0)
probs
bar = txtProgressBar(style=3, width=40)
for (i in 1:length(runs)){
filename <- paste0(dir_in, list.files(dir_in, pattern=".log")[runs[i]])
probs[i,2:4] <- readTrace(filename, burnin = 0.1)[[1]] %>%
select(`theta[1]`, `theta[2]`, `stv[1]`, `stv[2]`,
`halflife[1]`, `halflife[2]`) %>%
mutate(dtheta = ifelse(`theta[1]` > `theta[2]`, 1, 0),
dstv = ifelse(`stv[1]` > `stv[2]`, 1, 0),
dhalflife = ifelse(`halflife[1]` > `halflife[2]`, 1, 0)) %>%
summarise(ptheta12 = mean(dtheta),
pstv12 = mean(dstv),
phalflife12 = mean(dhalflife)) %>%
#unlist() %>%
unname()
setTxtProgressBar(bar, i / num_run)
}
length(runs)
runs[i]
list.files(dir_in, pattern=".log")[runs[i]]
runs[i]
probs <- tibble(run = 1:length(runs), ptheta12 = 0, pstv12 = 0, phalflife12 = 0)
bar = txtProgressBar(style=3, width=40)
for (i in 1:length(runs)){
filename <- paste0(dir_in, list.files(dir_in, pattern=paste0(runs[i], ".log")))
probs[i,2:4] <- readTrace(filename, burnin = 0.1)[[1]] %>%
select(`theta[1]`, `theta[2]`, `stv[1]`, `stv[2]`,
`halflife[1]`, `halflife[2]`) %>%
mutate(dtheta = ifelse(`theta[1]` > `theta[2]`, 1, 0),
dstv = ifelse(`stv[1]` > `stv[2]`, 1, 0),
dhalflife = ifelse(`halflife[1]` > `halflife[2]`, 1, 0)) %>%
summarise(ptheta12 = mean(dtheta),
pstv12 = mean(dstv),
phalflife12 = mean(dhalflife)) %>%
#unlist() %>%
unname()
setTxtProgressBar(bar, i / num_run)
}
probs
probs %>% summarise(ptheta = mean(ptheta12),
pstv = mean(pstv12),
phl = mean(phalflife12))
# specify input and output directories
dir_in="output/3_empirical/sdOU_r500_carnivory/"
dir_out="figures/3_empirical/sdOU_carnivory/"
runs = c(1, 3, 4, 5)
probs <- tibble(run = 1:length(runs), ptheta12 = 0, pstv12 = 0, phalflife12 = 0)
bar = txtProgressBar(style=3, width=40)
for (i in 1:length(runs)){
filename <- paste0(dir_in, list.files(dir_in, pattern=paste0(runs[i], ".log")))
probs[i,2:4] <- readTrace(filename, burnin = 0.1)[[1]] %>%
select(`theta[1]`, `theta[2]`, `stv[1]`, `stv[2]`,
`halflife[1]`, `halflife[2]`) %>%
mutate(dtheta = ifelse(`theta[1]` > `theta[2]`, 1, 0),
dstv = ifelse(`stv[1]` > `stv[2]`, 1, 0),
dhalflife = ifelse(`halflife[1]` > `halflife[2]`, 1, 0)) %>%
summarise(ptheta12 = mean(dtheta),
pstv12 = mean(dstv),
phalflife12 = mean(dhalflife)) %>%
#unlist() %>%
unname()
setTxtProgressBar(bar, i / num_run)
}
probs %>% summarise(ptheta = mean(ptheta12),
pstv = mean(pstv12),
phl = mean(phalflife12))
probs
probs <- tibble(run = 1:num_run,
ptheta12 = 0, ptheta13 = 0, ptheta14 = 0, ptheta23 = 0, ptheta24 = 0, ptheta34 = 0,
pstv12 = 0, pstv13 = 0, pstv14 = 0, pstv23 = 0, pstv24 = 0, pstv34 = 0,
phalflife12 = 0, phalflife13 = 0, phalflife14 = 0, phalflife23 = 0, phalflife24 = 0, phalflife34 = 0)
bar = txtProgressBar(style=3, width=40)
for (i in 1:length(runs)){
filename <- paste0(dir_in, list.files(dir_in, pattern=paste0(runs[i], ".log")))
probs[i,2:13] <- readTrace(filename, burnin = 0.1)[[1]] %>%
select(`theta[1]`, `theta[2]`, `theta[3]`, `theta[4]`,
`stv[1]`, `stv[2]`, `stv[3]`, `stv[4]`,
`halflife[1]`, `halflife[2]`, `halflife[3]`, `halflife[4]`) %>%
mutate(dtheta12 = ifelse(`theta[1]` > `theta[2]`, 1, 0),
dtheta13 = ifelse(`theta[1]` > `theta[3]`, 1, 0),
dtheta14 = ifelse(`theta[1]` > `theta[4]`, 1, 0),
dtheta23 = ifelse(`theta[2]` > `theta[3]`, 1, 0),
dtheta24 = ifelse(`theta[2]` > `theta[4]`, 1, 0),
dtheta34 = ifelse(`theta[3]` > `theta[4]`, 1, 0),
dstv12 = ifelse(`stv[1]` > `stv[2]`, 1, 0),
dstv13 = ifelse(`stv[1]` > `stv[3]`, 1, 0),
dstv14 = ifelse(`stv[1]` > `stv[4]`, 1, 0),
dstv23 = ifelse(`stv[2]` > `stv[3]`, 1, 0),
dstv24 = ifelse(`stv[2]` > `stv[4]`, 1, 0),
dstv34 = ifelse(`stv[3]` > `stv[4]`, 1, 0),
dhalflife12 = ifelse(`halflife[1]` > `halflife[2]`, 1, 0),
dhalflife13 = ifelse(`halflife[1]` > `halflife[3]`, 1, 0),
dhalflife14 = ifelse(`halflife[1]` > `halflife[4]`, 1, 0),
dhalflife23 = ifelse(`halflife[2]` > `halflife[3]`, 1, 0),
dhalflife24 = ifelse(`halflife[2]` > `halflife[4]`, 1, 0),
dhalflife34 = ifelse(`halflife[3]` > `halflife[4]`, 1, 0)) %>%
summarise(ptheta12 = mean(dtheta12),
ptheta13 = mean(dtheta13),
ptheta14 = mean(dtheta14),
ptheta23 = mean(dtheta23),
ptheta24 = mean(dtheta24),
ptheta34 = mean(dtheta34),
pstv12 = mean(dstv12),
pstv13 = mean(dstv13),
pstv14 = mean(dstv14),
pstv23 = mean(dstv23),
pstv24 = mean(dstv24),
pstv34 = mean(dstv34),
phalflife12 = mean(dhalflife12),
phalflife13 = mean(dhalflife13),
phalflife14 = mean(dhalflife14),
phalflife23 = mean(dhalflife23),
phalflife24 = mean(dhalflife24),
phalflife34 = mean(dhalflife34)) %>%
#unlist() %>%
unname()
setTxtProgressBar(bar, i / num_run)
}
# specify input and output directories
dir_in="output/3_empirical/sdOU_r500_pica/"
dir_out="figures/3_empirical/sdOU_r500_pica/"
runs = 4
probs <- tibble(run = 1:num_run,
ptheta12 = 0, ptheta13 = 0, ptheta14 = 0, ptheta23 = 0, ptheta24 = 0, ptheta34 = 0,
pstv12 = 0, pstv13 = 0, pstv14 = 0, pstv23 = 0, pstv24 = 0, pstv34 = 0,
phalflife12 = 0, phalflife13 = 0, phalflife14 = 0, phalflife23 = 0, phalflife24 = 0, phalflife34 = 0)
bar = txtProgressBar(style=3, width=40)
for (i in 1:length(runs)){
filename <- paste0(dir_in, list.files(dir_in, pattern=paste0(runs[i], ".log")))
probs[i,2:13] <- readTrace(filename, burnin = 0.1)[[1]] %>%
select(`theta[1]`, `theta[2]`, `theta[3]`, `theta[4]`,
`stv[1]`, `stv[2]`, `stv[3]`, `stv[4]`,
`halflife[1]`, `halflife[2]`, `halflife[3]`, `halflife[4]`) %>%
mutate(dtheta12 = ifelse(`theta[1]` > `theta[2]`, 1, 0),
dtheta13 = ifelse(`theta[1]` > `theta[3]`, 1, 0),
dtheta14 = ifelse(`theta[1]` > `theta[4]`, 1, 0),
dtheta23 = ifelse(`theta[2]` > `theta[3]`, 1, 0),
dtheta24 = ifelse(`theta[2]` > `theta[4]`, 1, 0),
dtheta34 = ifelse(`theta[3]` > `theta[4]`, 1, 0),
dstv12 = ifelse(`stv[1]` > `stv[2]`, 1, 0),
dstv13 = ifelse(`stv[1]` > `stv[3]`, 1, 0),
dstv14 = ifelse(`stv[1]` > `stv[4]`, 1, 0),
dstv23 = ifelse(`stv[2]` > `stv[3]`, 1, 0),
dstv24 = ifelse(`stv[2]` > `stv[4]`, 1, 0),
dstv34 = ifelse(`stv[3]` > `stv[4]`, 1, 0),
dhalflife12 = ifelse(`halflife[1]` > `halflife[2]`, 1, 0),
dhalflife13 = ifelse(`halflife[1]` > `halflife[3]`, 1, 0),
dhalflife14 = ifelse(`halflife[1]` > `halflife[4]`, 1, 0),
dhalflife23 = ifelse(`halflife[2]` > `halflife[3]`, 1, 0),
dhalflife24 = ifelse(`halflife[2]` > `halflife[4]`, 1, 0),
dhalflife34 = ifelse(`halflife[3]` > `halflife[4]`, 1, 0)) %>%
summarise(ptheta12 = mean(dtheta12),
ptheta13 = mean(dtheta13),
ptheta14 = mean(dtheta14),
ptheta23 = mean(dtheta23),
ptheta24 = mean(dtheta24),
ptheta34 = mean(dtheta34),
pstv12 = mean(dstv12),
pstv13 = mean(dstv13),
pstv14 = mean(dstv14),
pstv23 = mean(dstv23),
pstv24 = mean(dstv24),
pstv34 = mean(dstv34),
phalflife12 = mean(dhalflife12),
phalflife13 = mean(dhalflife13),
phalflife14 = mean(dhalflife14),
phalflife23 = mean(dhalflife23),
phalflife24 = mean(dhalflife24),
phalflife34 = mean(dhalflife34)) %>%
#unlist() %>%
unname()
setTxtProgressBar(bar, i / num_run)
}
for (i in 1:length(runs)){
filename <- paste0(dir_in, list.files(dir_in, pattern=paste0(runs[i], ".log")))
probs[i,2:19] <- readTrace(filename, burnin = 0.1)[[1]] %>%
select(`theta[1]`, `theta[2]`, `theta[3]`, `theta[4]`,
`stv[1]`, `stv[2]`, `stv[3]`, `stv[4]`,
`halflife[1]`, `halflife[2]`, `halflife[3]`, `halflife[4]`) %>%
mutate(dtheta12 = ifelse(`theta[1]` > `theta[2]`, 1, 0),
dtheta13 = ifelse(`theta[1]` > `theta[3]`, 1, 0),
dtheta14 = ifelse(`theta[1]` > `theta[4]`, 1, 0),
dtheta23 = ifelse(`theta[2]` > `theta[3]`, 1, 0),
dtheta24 = ifelse(`theta[2]` > `theta[4]`, 1, 0),
dtheta34 = ifelse(`theta[3]` > `theta[4]`, 1, 0),
dstv12 = ifelse(`stv[1]` > `stv[2]`, 1, 0),
dstv13 = ifelse(`stv[1]` > `stv[3]`, 1, 0),
dstv14 = ifelse(`stv[1]` > `stv[4]`, 1, 0),
dstv23 = ifelse(`stv[2]` > `stv[3]`, 1, 0),
dstv24 = ifelse(`stv[2]` > `stv[4]`, 1, 0),
dstv34 = ifelse(`stv[3]` > `stv[4]`, 1, 0),
dhalflife12 = ifelse(`halflife[1]` > `halflife[2]`, 1, 0),
dhalflife13 = ifelse(`halflife[1]` > `halflife[3]`, 1, 0),
dhalflife14 = ifelse(`halflife[1]` > `halflife[4]`, 1, 0),
dhalflife23 = ifelse(`halflife[2]` > `halflife[3]`, 1, 0),
dhalflife24 = ifelse(`halflife[2]` > `halflife[4]`, 1, 0),
dhalflife34 = ifelse(`halflife[3]` > `halflife[4]`, 1, 0)) %>%
summarise(ptheta12 = mean(dtheta12),
ptheta13 = mean(dtheta13),
ptheta14 = mean(dtheta14),
ptheta23 = mean(dtheta23),
ptheta24 = mean(dtheta24),
ptheta34 = mean(dtheta34),
pstv12 = mean(dstv12),
pstv13 = mean(dstv13),
pstv14 = mean(dstv14),
pstv23 = mean(dstv23),
pstv24 = mean(dstv24),
pstv34 = mean(dstv34),
phalflife12 = mean(dhalflife12),
phalflife13 = mean(dhalflife13),
phalflife14 = mean(dhalflife14),
phalflife23 = mean(dhalflife23),
phalflife24 = mean(dhalflife24),
phalflife34 = mean(dhalflife34)) %>%
#unlist() %>%
unname()
setTxtProgressBar(bar, i / num_run)
}
probs
View(probs)
library(RevGadgets)
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(latex2exp)
library(ape)
library(tidyverse)
# read in tree
tree <- read.nexus("data/3_empirical/raw/4705sp_mammal-time_Álvarez-Carretero_2022.tree")
# check root age/tree height -- the raw file has a unit of 100 million-year
max(node.depth.edgelength(tree))
# transform unit to million years because I prefer so
tree$edge.length <- tree$edge.length * 100
trait <- read.csv("data/3_empirical/raw/PHYLACINE_1.2.1_Trait_data.csv")
trait <- trait %>%
filter(!is.na(Mass.g),
!is.na(Diet.Plant),
!is.na(Diet.Vertebrate),
!is.na(Diet.Invertebrate)) %>%
mutate(Binomial.1.2 = tolower(Binomial.1.2),
herbivore = ifelse(Diet.Plant == 100, 1, 0),
carnivore = ifelse(Diet.Vertebrate + Diet.Invertebrate == 100, 1, 0),
omnivore = ifelse(herbivore == 1 | carnivore == 1, 0, 1),
diet = herbivore + omnivore * 2 + carnivore * 3 - 1,
log_mass_kg = log(Mass.g / 1000)) %>%
select(Binomial.1.2, log_mass_kg, diet, carnivore)
# species names found in both trait data and tree
tips_keep <- intersect(tree$tip.label, trait$Binomial.1.2)
# remove species not found in tree
tree <- keep.tip(tree, tips_keep)
# remove species not found in trait
trait <- trait %>% filter(Binomial.1.2 %in% tips_keep)
# now, I wanna subset a tree that works for both manuscript and thesis
# and the thesis uses a different trait dataset as source
# let's search for taxa that intersect with that dataset as well
trait_picky <- read.csv("data/3_empirical/raw/COMBINE_imputed_Soria_2021.csv") %>%
mutate(Binomial.1.2 = tolower(gsub(" ", "_", phylacine_binomial))) %>%
filter(!duplicated(phylacine_binomial),
!is.na(det_fruit),
Binomial.1.2 %in% tips_keep) %>%
mutate(picky = ifelse(det_fruit >=90 | det_inv >=90 | det_vend>=90 | det_vect>=90 | det_vfish >=90 | det_vunk >=90 | det_scav >=90 | det_nect >=90 | det_seed >=90 | det_plantother >=90, 1, 0)) %>%
select(Binomial.1.2, picky)
trait_picky
tree <- read.tree("data/3_empirical/mammal_perMY_r500.tre")
trait <- read.csv("data/3_empirical/raw/PHYLACINE_1.2.1_Trait_data.csv")
trait <- trait %>%
filter(!is.na(Mass.g),
!is.na(Diet.Plant),
!is.na(Diet.Vertebrate),
!is.na(Diet.Invertebrate)) %>%
mutate(Binomial.1.2 = tolower(Binomial.1.2),
herbivore = ifelse(Diet.Plant == 100, 1, 0),
carnivore = ifelse(Diet.Vertebrate + Diet.Invertebrate == 100, 1, 0),
omnivore = ifelse(herbivore == 1 | carnivore == 1, 0, 1),
diet = herbivore + omnivore * 2 + carnivore * 3 - 1,
log_mass_kg = log(Mass.g / 1000)) %>%
select(Binomial.1.2, log_mass_kg, diet, carnivore)
colnames(trait)
trait <- read.csv("data/3_empirical/raw/PHYLACINE_1.2.1_Trait_data.csv")
trait <- read.csv("data/3_empirical/raw/PHYLACINE_1.2.1_Trait_data.csv")
trait <- trait %>%
filter(!is.na(Mass.g),
!is.na(Diet.Plant),
!is.na(Diet.Vertebrate),
!is.na(Diet.Invertebrate))
colnames(trait)
trait_picky <- read.csv("data/3_empirical/raw/COMBINE_imputed_Soria_2021.csv")
trait_picky
colnames(trait_picky)
library(ape)
library(tidyverse)
# read in tree
tree <- read.nexus("data/3_empirical/raw/4705sp_mammal-time_Álvarez-Carretero_2022.tree")
# check root age/tree height -- the raw file has a unit of 100 million-year
max(node.depth.edgelength(tree))
# transform unit to million years because I prefer so
tree$edge.length <- tree$edge.length * 100
trait <- read.csv("data/3_empirical/raw/PHYLACINE_1.2.1_Trait_data.csv")
set.seed(1234)
tips_r6 <- sample(trait_picky$Binomial.1.2, 6)
trait <- read.csv("data/3_empirical/raw/PHYLACINE_1.2.1_Trait_data.csv")
trait <- trait %>%
filter(!is.na(Mass.g),
!is.na(Diet.Plant),
!is.na(Diet.Vertebrate),
!is.na(Diet.Invertebrate)) %>%
mutate(Binomial.1.2 = tolower(Binomial.1.2),
herbivore = ifelse(Diet.Plant == 100, 1, 0),
carnivore = ifelse(Diet.Vertebrate + Diet.Invertebrate == 100, 1, 0),
omnivore = ifelse(herbivore == 1 | carnivore == 1, 0, 1),
diet = herbivore + omnivore * 2 + carnivore * 3 - 1,
log_mass_kg = log(Mass.g / 1000)) %>%
select(Binomial.1.2, log_mass_kg, diet, carnivore)
# species names found in both trait data and tree
tips_keep <- intersect(tree$tip.label, trait$Binomial.1.2)
# remove species not found in tree
tree <- keep.tip(tree, tips_keep)
# remove species not found in trait
trait <- trait %>% filter(Binomial.1.2 %in% tips_keep)
tree_r6 <- keep.tip(tree, sample(trait$Binomial.1.2, 6))
plot(tree_r6)
write.tree(tree_r6, "data/3_empirical/mammal_perMY_r6.tre")
qlnorm(p = 0.975, meanlog = 4.3613845, sdlog = 1.044495)
max(node.depth.edgelength(tree_r6))
max(node.depth.edgelength(tree_r6))*3
qlnorm(p = 0.975, meanlog = 3, sdlog = 1.044495)
qlnorm(p = 0.975, meanlog = 4, sdlog = 1.044495)
qlnorm(p = 0.975, meanlog = 3.3, sdlog = 1.044495)
qlnorm(p = 0.975, meanlog = 3.4, sdlog = 1.044495)
var(c(-1.38,
3.84,
-3.72,
4.87,
-3.21,
1.67))
library(ape)
library(tidyverse)
# since I obtained the phylogeny and the trait data from different sources
# taxa don't always match
# Let's retain the taxa that are present in both the phylogeny and the trait database.
# read in tree
tree <- read.nexus("data/3_empirical/raw/4705sp_mammal-time_Álvarez-Carretero_2022.tree")
# check root age/tree height -- the raw file has a unit of 100 million-year
max(node.depth.edgelength(tree))
# transform unit to million years because I prefer so
tree$edge.length <- tree$edge.length * 100
trait <- read.csv("data/3_empirical/raw/PHYLACINE_1.2.1_Trait_data.csv")
trait <- trait %>%
filter(!is.na(Mass.g),
!is.na(Diet.Plant),
!is.na(Diet.Vertebrate),
!is.na(Diet.Invertebrate)) %>%
mutate(Binomial.1.2 = tolower(Binomial.1.2),
herbivore = ifelse(Diet.Plant == 100, 1, 0),
carnivore = ifelse(Diet.Vertebrate + Diet.Invertebrate == 100, 1, 0),
omnivore = ifelse(herbivore == 1 | carnivore == 1, 0, 1),
diet = herbivore + omnivore * 2 + carnivore * 3 - 1,
log_mass_kg = log(Mass.g / 1000)) %>%
select(Binomial.1.2, log_mass_kg, diet, carnivore)
trait <- read.csv("data/3_empirical/raw/PHYLACINE_1.2.1_Trait_data.csv")
trait <- trait %>%
filter(!is.na(Mass.g),
!is.na(Diet.Plant),
!is.na(Diet.Vertebrate),
!is.na(Diet.Invertebrate))
colnames(trait)
head(trait$Mass.Comparison)
# now, I wanna subset a tree that works for both manuscript and thesis
# and the thesis uses a different trait dataset as source
# let's search for taxa that intersect with that dataset as well
trait_picky <- read.csv("data/3_empirical/raw/COMBINE_imputed_Soria_2021.csv") %>%
mutate(Binomial.1.2 = tolower(gsub(" ", "_", phylacine_binomial))) %>%
filter(!duplicated(phylacine_binomial),
!is.na(det_fruit),
Binomial.1.2 %in% tips_keep) %>%
mutate(picky = ifelse(det_fruit >=90 | det_inv >=90 | det_vend>=90 | det_vect>=90 | det_vfish >=90 | det_vunk >=90 | det_scav >=90 | det_nect >=90 | det_seed >=90 | det_plantother >=90, 1, 0)) %>%
select(Binomial.1.2, picky)
trait_picky <- read.csv("data/3_empirical/raw/COMBINE_imputed_Soria_2021.csv") %>%
mutate(Binomial.1.2 = tolower(gsub(" ", "_", phylacine_binomial)))
col_names(trait_picky)
colnames(trait_picky)
head(trait_picky$max_longevity_d)
length(is.na(trait_picky$max_longevity_d))
length(is.na(trait_picky$altitude_breadth_m))
length(!is.na(trait_picky$max_longevity_d))
trait_picky$max_longevity_d)
trait_picky$max_longevity_d
trait_picky$adult_forearm_length_mm
length(unique(trait_picky$adult_forearm_length_mm))
length(unique(trait_picky$brain_mass_g))
