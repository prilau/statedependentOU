df <- read.csv("Downloads/AmphiBIO_v1/AmphiBIO_v1.csv") %>%
select(Order, Family, Genus, Species, Dir, Lar, Viv, Body_size_mm) %>%
filter(Order == "Caudata",
!is.na(Body_size_mm))
unique(df$Dir)
unique(df$Lar)
unique(df$Viv)
df <- read.csv("Downloads/AmphiBIO_v1/AmphiBIO_v1.csv") %>%
select(Order, Family, Genus, Species, Wet_warm, Wet_cold, Dry_warm, Dry_cold, Body_size_mm) %>%
filter(Order == "Anura",
!is.na(Body_size_mm))
unique(df$Wet_warm)
unique(df$Wet_cold)
unique(df$Wet_warm)
unique(df$Dry_warm)
unique(df$Dry_cold)
df_Wet_warm <- df %>% filter(!is.na(Dir)) %>%
mutate(breed = 0) %>%
select(!Dir)
df <- read.csv("Downloads/AmphiBIO_v1/AmphiBIO_v1.csv") %>%
select(Order, Family, Genus, Species, Dir, Lar, Viv, Body_size_mm) %>%
filter(Order == "Caudata",
!is.na(Body_size_mm))
df_Dir <- df %>% filter(!is.na(Dir)) %>%
mutate(breed = 0) %>%
select(!Dir)
df_Dir <- df %>% filter(!is.na(Dir))
df_Dir$Dir == 0
length(which(df_Dir$Dir == 0))
length(which(df_Dir$Dir == 1))
df_Dir <- df %>% filter(!is.na(Dir),
Dir == 1) %>%
mutate(breed = 0) %>%
select(!Dir)
View(df_Wet_warm)
df_Lar <- df %>% filter(!is.na(Lar), Lar == 1) %>%
mutate(breed = 1) %>%
select(!Lar)
df_Viv <- df %>% filter(!is.na(Viv), Viv == 1) %>%
mutate(breed = 2) %>%
select(!Viv)
df <- read.csv("Downloads/AmphiBIO_v1/AmphiBIO_v1.csv") %>%
select(Order, Family, Genus, Species, Diu, Noc, Crepu, Body_size_mm) %>%
filter(Order == "Caudata",
!is.na(Body_size_mm))
df_Diu <- df %>% filter(!is.na(Diu), Diu == 1) %>%
mutate(breed = 0) %>%
select(!Diu)
df_Noc <- df %>% filter(!is.na(Noc), Noc == 1) %>%
mutate(breed = 1) %>%
select(!Noc)
df_Crepu <- df %>% filter(!is.na(Crepu), Crepu == 1) %>%
mutate(breed = 2) %>%
select(!Crepu)
df <- read.csv("Downloads/AmphiBIO_v1/AmphiBIO_v1.csv") %>%
select(Order, Family, Genus, Species, Leaves, Flowers, Seeds,
Arthro, Vert, Body_size_mm) %>%
filter(#Order == "Caudata",
!is.na(Body_size_mm))
df <- read.csv("Downloads/AmphiBIO_v1/AmphiBIO_v1.csv") %>%
select(Order, Family, Genus, Species, Leaves, Flowers, Seeds,
Arthro, Vert, Body_size_mm) %>%
filter(Order == "Caudata",
!is.na(Body_size_mm))
unique(df$Leaves)
unique(df$Flowers)
unique(df$Seeds)
unique(df$Arthro)
unique(df$Vert)
is.na(df$Flowers)
is.na(df$Flowers. df$Leaves)
is.na(df$Flowers, df$Leaves)
is.na(c(df$Flowers, df$Leaves))
is.na(c(df$Flowers, df$Leaves))[1]
df <- read.csv("Downloads/AmphiBIO_v1/AmphiBIO_v1.csv") %>%
select(Order, Family, Genus, Species, Leaves, Flowers, Fruits, Seeds,
Arthro, Vert, Body_size_mm) %>%
filter(Order == "Caudata",
!is.na(Body_size_mm))
is.na(c(df$Flowers, df$Leaves, df$Seeds, df$Fruits))[1]
View(df)
is.na(c(df$Flowers, df$Leaves, df$Seeds, df$Fruits))[284]
df <- read.csv("Downloads/AmphiBIO_v1/AmphiBIO_v1.csv") %>%
select(Order, Family, Genus, Species, Leaves, Flowers, Fruits, Seeds,
Arthro, Vert, Body_size_mm) %>%
filter(Order == "Anura",
!is.na(Body_size_mm))
length(which(df$Vert==1))
length(which(df$Vert==0))
length(which(df$Vert==NA))
length(which(df$Vert==1))
length(which(df$Arthro==1))
length(which(df$Fruits==1))
df <- read.csv("Downloads/AmphiBIO_v1/AmphiBIO_v1.csv") %>%
select(Order, Family, Genus, Species, Wet_warm, Wet_cold, Dry_warm, Dry_cold, Body_size_mm) %>%
filter(Order == "Caudata",
!is.na(Body_size_mm))
df_Wet_warm <- df %>% filter(!is.na(Wet_warm)) %>%
mutate(active_warm = 1,
active_wet = 1,
active = 3) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df_Dry_warm <- df %>% filter(!is.na(Dry_warm)) %>%
mutate(active_warm = 1,
active_wet = 0,
active = 2) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df_Wet_cold <- df %>% filter(!is.na(Wet_cold)) %>%
mutate(active_warm = 0,
active_wet = 1,
active = 1) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df_Dry_cold <- df %>% filter(!is.na(Dry_cold)) %>%
mutate(active_warm = 0,
active_wet = 0,
active = 0) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df <- read.csv("Downloads/AmphiBIO_v1/AmphiBIO_v1.csv") %>%
select(Order, Family, Genus, Species, Wet_warm, Wet_cold, Dry_warm, Dry_cold, Body_size_mm) %>%
filter(Order == "Anura",
!is.na(Body_size_mm))
df_Wet_warm <- df %>% filter(!is.na(Wet_warm)) %>%
mutate(active_warm = 1,
active_wet = 1,
active = 3) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df_Dry_warm <- df %>% filter(!is.na(Dry_warm)) %>%
mutate(active_warm = 1,
active_wet = 0,
active = 2) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df_Wet_cold <- df %>% filter(!is.na(Wet_cold)) %>%
mutate(active_warm = 0,
active_wet = 1,
active = 1) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df_Dry_cold <- df %>% filter(!is.na(Dry_cold)) %>%
mutate(active_warm = 0,
active_wet = 0,
active = 0) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df_active <- do.call("rbind", list(df_Dry_cold,
df_Dry_warm,
df_Wet_warm,
df_Wet_cold)) %>%
group_by(Species) %>%
summarise(mean_size = mean(Body_size_mm)) %>%
mutate(log_size = log(mean_size))
ggplot(data=df_active) +
geom_bar(aes(x=active))
df_active <- do.call("rbind", list(df_Dry_cold,
df_Dry_warm,
df_Wet_warm,
df_Wet_cold)) #%>%
ggplot(data=df_active) +
geom_bar(aes(x=active))
ggplot(data=df_active) +
geom_bar(aes(x=active, group=Family))
df_active <- do.call("rbind", list(df_Dry_cold,
df_Dry_warm,
df_Wet_warm,
df_Wet_cold)) %>%
group_by(Family) #%>%
ggplot(data=df_active) +
geom_bar(aes(x=active, color=Family))
ggplot(data=df_active) +
geom_bar(aes(x=active)) +
facet_grid(rows = vars(Family))
df_active <- do.call("rbind", list(df_Dry_cold,
df_Dry_warm,
df_Wet_warm,
df_Wet_cold)) %>%
filter(Family %in% c("Hylidae", "Strabomantidae", "Ranidae", "Rhacophoridae", "Bufonidae")) #%>%
ggplot(data=df_active) +
geom_bar(aes(x=active)) +
facet_grid(rows = vars(Family))
df_active <- do.call("rbind", list(df_Dry_cold,
df_Dry_warm,
df_Wet_warm,
df_Wet_cold)) #%>%
ggplot(data=df_active) +
geom_bar(aes(x=active)) +
facet_grid(rows = vars(active_warm), cols = vars(active_wet))
df <- read.csv("Downloads/AmphiBIO_v1/AmphiBIO_v1.csv") %>%
select(Order, Family, Genus, Species, Wet_warm, Wet_cold, Dry_warm, Dry_cold, Body_size_mm) %>%
filter(Order == "Anura",
!is.na(Body_size_mm))
df_Wet_warm <- df %>% filter(!is.na(Wet_warm)) %>%
mutate(active_warm = 1,
active_wet = 1,
active = 3) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df_Dry_warm <- df %>% filter(!is.na(Dry_warm)) %>%
mutate(active_warm = 1,
active_wet = 0,
active = 2) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df_Wet_cold <- df %>% filter(!is.na(Wet_cold)) %>%
mutate(active_warm = 0,
active_wet = 1,
active = 1) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df_Dry_cold <- df %>% filter(!is.na(Dry_cold)) %>%
mutate(active_warm = 0,
active_wet = 0,
active = 0) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df_active <- do.call("rbind", list(df_Dry_cold,
df_Dry_warm,
df_Wet_warm,
df_Wet_cold)) #%>%
39 + 192 + 139 + 763
39 / 1133
200 / 1133
library(ape)
tree <- read.tree("Downloads/TreePL-Rooted_Anura_bestTree.tre")
keep.tip(tree, tip = df_active$Species)
df <- read.csv("Downloads/AmphiBIO_v1/AmphiBIO_v1.csv") %>%
select(Order, Family, Genus, Species, Wet_warm, Wet_cold, Dry_warm, Dry_cold, Body_size_mm) %>%
filter(Order == "Anura",
!is.na(Body_size_mm)) %>%
mutate(Species = gsub(" ", "_", Species))
df_Wet_warm <- df %>% filter(!is.na(Wet_warm)) %>%
mutate(active_warm = 1,
active_wet = 1,
active = 3) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df_Dry_warm <- df %>% filter(!is.na(Dry_warm)) %>%
mutate(active_warm = 1,
active_wet = 0,
active = 2) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df_Wet_cold <- df %>% filter(!is.na(Wet_cold)) %>%
mutate(active_warm = 0,
active_wet = 1,
active = 1) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df_Dry_cold <- df %>% filter(!is.na(Dry_cold)) %>%
mutate(active_warm = 0,
active_wet = 0,
active = 0) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df_active <- do.call("rbind", list(df_Dry_cold,
df_Dry_warm,
df_Wet_warm,
df_Wet_cold)) #%>%
keep.tip(tree, tip = df_active$Species)
intersect(tree$tip.label, df_active$Species)
tips = intersect(tree$tip.label, df_active$Species)
match_tree <- keep.tip(tree, tip = tips)
df_active <- df_active %>%
filter(Species %in% tips)
ggplot(data=df_active) +
geom_bar(aes(x=active)) +
facet_grid(rows = vars(active_warm), cols = vars(active_wet))
length(which(df_active$active==0))
length(which(df_active$active==1))
length(which(df_active$active==2))
length(which(df_active$active==3))
df_active <- df_active %>%
filter(Species %in% tips)
df_active <- df_active %>%
filter(Species %in% tips) %>%
group_by(Species) %>%
filter(Body_size_mm == median(Body_size_mm)) %>%
ungroup()
df_active <- df_active %>%
filter(Species %in% tips) %>%
group_by(Species) %>%
filter(Body_size_mm == median(Body_size_mm))
duplicated(df_active$Species)
df_active[56,]
df_active[57,]
df_active <- df_active %>%
filter(Species %in% tips) %>%
group_by(Species) %>%
mutate(Body_size_mm == median(Body_size_mm)) %>%
filter(!duplicated(Species))
ggplot(data=df_active) +
geom_bar(aes(x=active)) +
facet_grid(rows = vars(active_warm), cols = vars(active_wet))
length(which(df_active$active == 0))
length(which(df_active$active == 1))
length(which(df_active$active == 2))
length(which(df_active$active == 3))
29 + 63
92 / 734
29 / 734
df <- read.csv("Downloads/AmphiBIO_v1/AmphiBIO_v1.csv") %>%
select(Order, Family, Genus, Species, Dir, Lar, Viv, Body_size_mm) %>%
filter(Order == "Anura",
!is.na(Body_size_mm))
df <- read.csv("Downloads/AmphiBIO_v1/AmphiBIO_v1.csv") %>%
select(Order, Family, Genus, Species, Dir, Lar, Viv, Body_size_mm) %>%
mutate(Species = gsub(" ", "_", Species)) %>%
filter(Order == "Anura",
!is.na(Body_size_mm),
Species %in% tree$Species)
df <- read.csv("Downloads/AmphiBIO_v1/AmphiBIO_v1.csv") %>%
select(Order, Family, Genus, Species, Dir, Lar, Viv, Body_size_mm) %>%
mutate(Species = gsub(" ", "_", Species))
df <- read.csv("Downloads/AmphiBIO_v1/AmphiBIO_v1.csv") %>%
select(Order, Family, Genus, Species, Dir, Lar, Viv, Body_size_mm) %>%
mutate(Species = gsub(" ", "_", Species)) %>%
filter(Order == "Anura",
!is.na(Body_size_mm),
Species %in% tree$tip.label)
df_Dir <- df %>% filter(!is.na(Dir), Dir == 1) %>%
mutate(breed = 0) %>%
select(!Dir)
df_Lar <- df %>% filter(!is.na(Lar), Lar == 1) %>%
mutate(breed = 1) %>%
select(!Lar)
df_Viv <- df %>% filter(!is.na(Viv), Viv == 1) %>%
mutate(breed = 2) %>%
select(!Viv)
df <- read.csv("Downloads/AmphiBIO_v1/AmphiBIO_v1.csv") %>%
select(Order, Family, Genus, Species, Diu, Noc, Crepu, Body_size_mm) %>%
mutate(Species = gsub(" ", "_", Species)) %>%
filter(Order == "Anura",
!is.na(Body_size_mm),
Species %in% tree$tip.label)
df_Diu <- df %>% filter(!is.na(Diu), Diu == 1) %>%
mutate(breed = 0) %>%
select(!Diu)
df_Noc <- df %>% filter(!is.na(Noc), Noc == 1) %>%
mutate(breed = 1) %>%
select(!Noc)
df_Crepu <- df %>% filter(!is.na(Crepu), Crepu == 1) %>%
mutate(breed = 2) %>%
select(!Crepu)
plot(tree)
plot(match_tree)
#tree <- read.tree("Downloads/TreePL-Rooted_Anura_bestTree.tre")
tree <- read.tree("Downloads/amphibiaweb-familylevelphylogeny/AW_Families_consensus_2019.tre")
#tree <- read.tree("Downloads/TreePL-Rooted_Anura_bestTree.tre")
tree <- read.tree("Downloads/amphibiaweb-familylevelphylogeny/AW_Families_consensus_2019.tre.phy")
#tree <- read.tree("Downloads/TreePL-Rooted_Anura_bestTree.tre")
tree <- read.tree("Downloads/amphibiaweb-familylevelphylogeny/AW_Families_consensus_2019.nex")
#tree <- read.tree("Downloads/TreePL-Rooted_Anura_bestTree.tre")
tree <- read.tree("Downloads/amphibiaweb-familylevelphylogeny/AmphibiaWeb_family-phylogeny_2019.nex")
length(which(df_active$active_warm == 0))
length(which(df_active$active_wet == 0))
length(which(df_active$active_warm == 1))
length(which(df_active$active_wet == 1))
library(ape)
library(tidyverse)
df <- read.csv("Downloads/AmphiBIO_v1/AmphiBIO_v1.csv") %>%
select(Order, Family, Genus, Species, Wet_warm, Wet_cold, Dry_warm, Dry_cold, Body_size_mm) %>%
filter(Order == "Anura",
!is.na(Body_size_mm)) %>%
mutate(Species = gsub(" ", "_", Species))
df_Wet_warm <- df %>% filter(!is.na(Wet_warm)) %>%
mutate(active_warm = 1,
active_wet = 1,
active = 3) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df_Dry_warm <- df %>% filter(!is.na(Dry_warm)) %>%
mutate(active_warm = 1,
active_wet = 0,
active = 2) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df_Wet_cold <- df %>% filter(!is.na(Wet_cold)) %>%
mutate(active_warm = 0,
active_wet = 1,
active = 1) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df_Dry_cold <- df %>% filter(!is.na(Dry_cold)) %>%
mutate(active_warm = 0,
active_wet = 0,
active = 0) %>%
select(!c(Wet_warm, Wet_cold, Dry_warm, Dry_cold))
df_active <- do.call("rbind", list(df_Dry_cold,
df_Dry_warm,
df_Wet_warm,
df_Wet_cold)) #%>%
ggplot(data=df_active) +
geom_bar(aes(x=active)) +
facet_grid(rows = vars(active_warm), cols = vars(active_wet))
tree <- read.tree("Downloads/TreePL-Rooted_Anura_bestTree.tre")
tips = intersect(tree$tip.label, df_active$Species)
df_active <- df_active %>%
filter(Species %in% tips) %>%
group_by(Species) %>%
mutate(Body_size_mm == median(Body_size_mm)) %>%
filter(!duplicated(Species))
match_tree <- keep.tip(tree, tip = tips)
View(tree)
?stepfun
library(grid)
sim_table <- expand.grid(Parameter = par, State = state)
state = c(0,1)
sim_table <- expand.grid(Parameter = par, State = state)
sim_table <- expand.grid(Parameter = par, State = state, stringsAsFactors = F)
state = c("0","1")
sim_table <- expand.grid(Parameter = par, State = state, stringsAsFactors = F)
par = c("Stationary variance", "Phylogenetic half-life", "Optimum")
pars = c("Stationary variance", "Phylogenetic half-life", "Optimum")
sim_table <- expand.grid(Parameter = par, State = state, stringsAsFactors = F)
sim_table <- expand.grid(Parameter = pars, State = state, stringsAsFactors = F)
View(sim_table)
sim_table <- tibble(Paramter = c("Stationary variance", "Phylogenetic half-life", "Optimum"),
`State 0` = NA, `State 1` = NA)
library(tidyverse)
sim_table <- tibble(Paramter = c("Stationary variance", "Phylogenetic half-life", "Optimum"),
`State 0` = NA, `State 1` = NA)
View(sim_table)
sim_table <- tibble(Paramter = c("Stationary variance", "Phylogenetic half-life", "Optimum"),
`State 0` = NA, `State 1` = NA)
inf_table <- tibble(Paramter = c("Stationary variance", "Phylogenetic half-life", "Optimum"),
`State 0` = NA, `State 1` = NA)
sim_table$Paramter
sim_table[1,]$`State 0`
sim_table[1,]$`State 0` = "Lognormal(meanlog = V, sdlog = 0.587)"
sim_table[1,]$`State 1` = "Lognormal(meanlog = V, sdlog = 0.587)"
sim_table[2,]$`State 0` = "Lognormal(meanlog = -0.95, sdlog = 1.04)"
sim_table[2,]$`State 1` = "Lognormal(meanlog = -0.95, sdlog = 1.04)"
sim_table[3,]$`State 0` = "Uniform(-10, 10)"
sim_table[3,]$`State 1` = "Normal(theta_0, 4)"
setwd("Desktop/statedependentOU/")
library(phytools)
a <- read.simmap("output/3_empirical/ase_carnivory/marginal_character.tree", format="phylip")
plot(a)
a <- read.simmap("output/3_empirical/ase_carnivory/marginal_character2.tree", format="phylip")
plot(a)
library(cowplot)
library(ggplot2)
library(gridExtra)
library(phytools)
library(readr)
library(RevGadgets)
source("scripts/4_plots/revgadgets_StochMap.R")
tree <- readTrees("data/3_empirical/mammal_perMY_n2955.tre")
t <- read.tree("data/3_empirical/mammal_perMY_n2955.tre")
###################
# ancestral state #
###################
ase <- processAncStates("output/3_empirical/ase_picky/anc_states2.tre",
state_labels=c("0"="Not picky", "1"="Picky"))
ase <- processAncStates("output/3_empirical/ase_carnivory/anc_states2.tre",
# Specify state labels.
# These numbers correspond to
# your input data file.
state_labels=c("0"="Not carnivore", "1"="Carnivore"))
# produce the plot object, showing MAP states at nodes.
# color corresponds to state, size to the state's posterior probability
p2 <- plotAncStatesMAP(t = ase,
#tip_labels_offset = 0.5,
node_color = c("Not carnivore"="#ffcccc", "Carnivore"="#663333"),
tip_labels = FALSE,
tip_states = FALSE,
node_color_as = "state",
node_size = c(0.05, 1.2),
#tip_states_size = c(0.01, 0.01),
#tip_states_shape = 1,
state_transparency = 0.6,
tree_layout = "circular",
#tip_labels_size = 0.5
tree_color = "#D3D3D3",
tree_linewidth = 0.1) +
# modify legend location using ggplot2
guides(color = "none")
p2
# produce the plot object, showing MAP states at nodes.
# color corresponds to state, size to the state's posterior probability
p2 <- plotAncStatesMAP(t = ase,
#tip_labels_offset = 0.5,
node_color = c("Not carnivore"="#ffcccc", "Carnivore"="#663333"),
tip_labels = FALSE,
tip_states = TRUE,
node_color_as = "state",
node_size = c(0.05, 1.2),
#tip_states_size = c(0.01, 0.01),
#tip_states_shape = 1,
state_transparency = 0.6,
tree_layout = "circular",
#tip_labels_size = 0.5
tree_color = "#D3D3D3",
tree_linewidth = 0.1) +
# modify legend location using ggplot2
guides(color = "none")
p2
disc <- read.nexus.data("data/3_empirical/mammal_hrm_Discrete.nex")
make.simmap(tree = t, x = disc)
?make.simmap
sp <- colnames(disc)
sp <- rownames(disc)
sp <- names(disc)
disc <- as.vector(disc)
disc <- unlist(disc)
names(disc) <- sp
disc
make.simmap(tree = t, x = disc)
sims <- make.simmap(tree = t, x = disc, nsim = 1)
plot(sims)
sims <- make.simmap(tree = t, x = disc, nsim = 10)
plot(sims[[1]])
plot(sims[[2]])
plot(sims[[3]])
plot(sims)
grid.arrange(a, sims[[8]])
sims <- make.simmap(tree = t, x = disc, nsim = 1)
par(mfrow=c(1,2))
plot(sims)
par(mfrow=c(1,2))
plot(a)
plot(sims[[1]])
plot(a)
plot(sims[[1]])
library(ggtree)
p <- ggtree(a, layout = "circular", linewidth = 0.1)
p
