df <- readTrace(path = read_run1, burnin = 0.1)
df[[2]] <- readTrace(path = read_run2, burnin = 0.1)[[1]]
df[[1]]$run <- "run 1"
df[[2]]$run <- "run 2"
dfx <- bind_rows(df[[1]], df[[2]]) %>%
select(-starts_with(c("theta_compare", "alpha_compare", "rho_compare", "sigma2_compare", "halflife_compare", "stv_compare")))
for (par in pars){
if (this_state == "sd"){
dfs <- process_par(par, "sd")
} else {
dfs <- process_par(par, "stateless")
}
df_par <- dfs[[1]]
df_par_meantrue <- dfs[[2]]
this_combo_par <- paste0(this_combo, "_", par)
plot_par(par_name=par, df_par, df_par_meantrue, dir_out, this_combo_par)
}
}
216/6
for (i in 1:nrow(grid)){
this_row = grid[i,]
this_num_sim = this_row[[1]]
this_state = this_row[[2]]
this_combo = paste0(c("sim", this_num_sim, this_state), collapse = "_")
read_run1 <- paste0(dir_in, paste0(c("sim", i, this_state, "run_1_DPP.log"), collapse = "_"))
read_run2 <- paste0(dir_in, paste0(c("sim", i, this_state, "run_2_DPP.log"), collapse = "_"))
if ( isFALSE(file.exists(read_run1)) | isFALSE(file.exists(read_run2))) {
next
}
df <- readTrace(path = read_run1, burnin = 0.1)
df[[2]] <- readTrace(path = read_run2, burnin = 0.1)[[1]]
df[[1]]$run <- "run 1"
df[[2]]$run <- "run 2"
dfx <- bind_rows(df[[1]], df[[2]]) %>%
select(-starts_with(c("theta_compare", "alpha_compare", "rho_compare", "sigma2_compare", "halflife_compare", "stv_compare")))
for (par in pars){
if (this_state == "sd"){
dfs <- process_par(par, "sd")
} else {
dfs <- process_par(par, "stateless")
}
df_par <- dfs[[1]]
df_par_meantrue <- dfs[[2]]
this_combo_par <- paste0(this_combo, "_", par)
plot_par(par_name=par, df_par, df_par_meantrue, dir_out, this_combo_par)
}
}
for (i in 1:nrow(grid)){
this_row = grid[i,]
this_num_sim = this_row[[1]]
this_state = this_row[[2]]
this_combo = paste0(c("sim", this_num_sim, this_state, "DPP"), collapse = "_")
read_run1 <- paste0(dir_in, paste0(c("sim", i, this_state, "run_1_DPP.log"), collapse = "_"))
read_run2 <- paste0(dir_in, paste0(c("sim", i, this_state, "run_2_DPP.log"), collapse = "_"))
if ( isFALSE(file.exists(read_run1)) | isFALSE(file.exists(read_run2))) {
next
}
df <- readTrace(path = read_run1, burnin = 0.1)
df[[2]] <- readTrace(path = read_run2, burnin = 0.1)[[1]]
df[[1]]$run <- "run 1"
df[[2]]$run <- "run 2"
dfx <- bind_rows(df[[1]], df[[2]]) %>%
select(-starts_with(c("theta_compare", "alpha_compare", "rho_compare", "sigma2_compare", "halflife_compare", "stv_compare")))
for (par in pars){
if (this_state == "sd"){
dfs <- process_par(par, "sd")
} else {
dfs <- process_par(par, "stateless")
}
df_par <- dfs[[1]]
df_par_meantrue <- dfs[[2]]
this_combo_par <- paste0(this_combo, "_", par)
plot_par(par_name=par, df_par, df_par_meantrue, dir_out, this_combo_par)
}
}
num_sim = 3
sdORsx   = c("sd", "stateless")
grid = expand.grid(num_sim=1:num_sim, sdORsx=sdORsx, stringsAsFactors=FALSE)
for (i in 1:nrow(grid)){
this_row = grid[i,]
this_num_sim = this_row[[1]]
this_state = this_row[[2]]
this_combo = paste0(c("sim", this_num_sim, this_state, "DPP"), collapse = "_")
read_run1 <- paste0(dir_in, paste0(c("sim", i, this_state, "run_1_DPP.log"), collapse = "_"))
read_run2 <- paste0(dir_in, paste0(c("sim", i, this_state, "run_2_DPP.log"), collapse = "_"))
if ( isFALSE(file.exists(read_run1)) | isFALSE(file.exists(read_run2))) {
next
}
df <- readTrace(path = read_run1, burnin = 0.1)
df[[2]] <- readTrace(path = read_run2, burnin = 0.1)[[1]]
df[[1]]$run <- "run 1"
df[[2]]$run <- "run 2"
dfx <- bind_rows(df[[1]], df[[2]]) %>%
select(-starts_with(c("theta_compare", "alpha_compare", "rho_compare", "sigma2_compare", "halflife_compare", "stv_compare")))
for (par in pars){
if (this_state == "sd"){
dfs <- process_par(par, "sd")
} else {
dfs <- process_par(par, "stateless")
}
df_par <- dfs[[1]]
df_par_meantrue <- dfs[[2]]
this_combo_par <- paste0(this_combo, "_", par)
plot_par(par_name=par, df_par, df_par_meantrue, dir_out, this_combo_par)
}
}
# plot DPP as well
num_sim = 3
sdORsx   = c("sd", "stateless")
grid = expand.grid(num_sim=1:num_sim, sdORsx=sdORsx, stringsAsFactors=FALSE)
this_combo = paste0(c("sim", this_num_sim, this_state, "DPP"), collapse = "_")
this_combo
for (i in 1:nrow(grid)){
this_row = grid[i,]
this_num_sim = this_row[[1]]
this_state = this_row[[2]]
this_combo = paste0(c("sim", this_num_sim, this_state, "DPP"), collapse = "_")
read_run1 <- paste0(dir_in, paste0(c("sim", i, this_state, "run_1_DPP.log"), collapse = "_"))
read_run2 <- paste0(dir_in, paste0(c("sim", i, this_state, "run_2_DPP.log"), collapse = "_"))
if ( isFALSE(file.exists(read_run1)) | isFALSE(file.exists(read_run2))) {
next
}
df <- readTrace(path = read_run1, burnin = 0.1)
df[[2]] <- readTrace(path = read_run2, burnin = 0.1)[[1]]
df[[1]]$run <- "run 1"
df[[2]]$run <- "run 2"
dfx <- bind_rows(df[[1]], df[[2]]) %>%
select(-starts_with(c("theta_compare", "alpha_compare", "rho_compare", "sigma2_compare", "halflife_compare", "stv_compare")))
for (par in pars){
if (this_state == "sd"){
dfs <- process_par(par, "sd")
} else {
dfs <- process_par(par, "stateless")
}
df_par <- dfs[[1]]
df_par_meantrue <- dfs[[2]]
this_combo_par <- paste0(this_combo, "_", par)
plot_par(par_name=par, df_par, df_par_meantrue, dir_out, this_combo_par)
}
}
num_sim = 3
sdORsx   = c("sd", "stateless")
grid = expand.grid(num_sim=1:num_sim, sdORsx=sdORsx, stringsAsFactors=FALSE)
grid
i=1
load("data/2_simulation/convergence/pars_sd.Rda")
load("data/2_simulation/convergence/pars_stateless.Rda")
pars <- c("theta", "alpha", "sigma2", "rho", "stv", "halflife")
dir_in = "output/2_simulation/convergence/logs/"
dir_out = "figures/2_simulation/convergence/"
# plot DPP as well
num_sim = 3
sdORsx   = c("sd", "stateless")
grid = expand.grid(num_sim=1:num_sim, sdORsx=sdORsx, stringsAsFactors=FALSE)
grid
i=1
this_row = grid[i,]
this_num_sim = this_row[[1]]
this_state = this_row[[2]]
this_combo = paste0(c("sim", this_num_sim, this_state, "DPP"), collapse = "_")
read_run1 <- paste0(dir_in, paste0(c("sim", i, this_state, "run_1_DPP.log"), collapse = "_"))
read_run2 <- paste0(dir_in, paste0(c("sim", i, this_state, "run_2_DPP.log"), collapse = "_"))
for (i in 1:nrow(grid)){
this_row = grid[i,]
this_num_sim = this_row[[1]]
this_state = this_row[[2]]
this_combo = paste0(c("sim", this_num_sim, this_state, "DPP"), collapse = "_")
read_run1 <- paste0(dir_in, paste0(c("sim", i, this_state, "run_1_DPP.log"), collapse = "_"))
read_run2 <- paste0(dir_in, paste0(c("sim", i, this_state, "run_2_DPP.log"), collapse = "_"))
if ( isFALSE(file.exists(read_run1)) | isFALSE(file.exists(read_run2))) {
next
}
df <- readTrace(path = read_run1, burnin = 0.1)
df[[2]] <- readTrace(path = read_run2, burnin = 0.1)[[1]]
df[[1]]$run <- "run 1"
df[[2]]$run <- "run 2"
dfx <- bind_rows(df[[1]], df[[2]]) %>%
select(-starts_with(c("theta_compare", "alpha_compare", "rho_compare", "sigma2_compare", "halflife_compare", "stv_compare")))
for (par in pars){
if (this_state == "sd"){
dfs <- process_par(par, "sd")
} else {
dfs <- process_par(par, "stateless")
}
df_par <- dfs[[1]]
df_par_meantrue <- dfs[[2]]
this_combo_par <- paste0(this_combo, "_", par)
plot_par(par_name=par, df_par, df_par_meantrue, dir_out, this_combo_par)
}
}
i=4
this_row = grid[i,]
this_num_sim = this_row[[1]]
this_state = this_row[[2]]
this_combo = paste0(c("sim", this_num_sim, this_state, "DPP"), collapse = "_")
read_run1 <- paste0(dir_in, paste0(c("sim", i, this_state, "run_1_DPP.log"), collapse = "_"))
read_run2 <- paste0(dir_in, paste0(c("sim", i, this_state, "run_2_DPP.log"), collapse = "_"))
read_run2
for (i in 1:nrow(grid)){
this_row = grid[i,]
this_num_sim = this_row[[1]]
this_state = this_row[[2]]
this_combo = paste0(c("sim", this_num_sim, this_state, "DPP"), collapse = "_")
read_run1 <- paste0(dir_in, paste0(c("sim", this_num_sim, this_state, "run_1_DPP.log"), collapse = "_"))
read_run2 <- paste0(dir_in, paste0(c("sim", this_num_sim, this_state, "run_2_DPP.log"), collapse = "_"))
if ( isFALSE(file.exists(read_run1)) | isFALSE(file.exists(read_run2))) {
next
}
df <- readTrace(path = read_run1, burnin = 0.1)
df[[2]] <- readTrace(path = read_run2, burnin = 0.1)[[1]]
df[[1]]$run <- "run 1"
df[[2]]$run <- "run 2"
dfx <- bind_rows(df[[1]], df[[2]]) %>%
select(-starts_with(c("theta_compare", "alpha_compare", "rho_compare", "sigma2_compare", "halflife_compare", "stv_compare")))
for (par in pars){
if (this_state == "sd"){
dfs <- process_par(par, "sd")
} else {
dfs <- process_par(par, "stateless")
}
df_par <- dfs[[1]]
df_par_meantrue <- dfs[[2]]
this_combo_par <- paste0(this_combo, "_", par)
plot_par(par_name=par, df_par, df_par_meantrue, dir_out, this_combo_par)
}
}
View(pars_stateless)
num_sim = 3
sdORsx   = c("sd", "stateless")
moves       = c("mv", "mvAVM", "2mv")
link = c("linkedPrior", "unlinkedPrior")
grid = expand.grid(num_sim=1:num_sim, sdORsx=sdORsx, moves=moves, link=link, stringsAsFactors=FALSE)
grid
i=4
this_row = grid[i,]
this_num_sim = this_row[[1]]
this_state = this_row[[2]]
this_move = this_row[[3]]
this_link = this_row[[4]]
this_combo = paste0(c("sim", this_num_sim, this_state, this_move, this_link), collapse = "_")
read_run1 <- paste0(dir_in, paste0(c("sim", this_num_sim, this_state, "run_1", this_move, this_link), collapse = "_"), ".log")
read_run2 <- paste0(dir_in, paste0(c("sim", this_num_sim, this_state, "run_2", this_move, this_link), collapse = "_"), ".log")
if ( isFALSE(file.exists(read_run1)) | isFALSE(file.exists(read_run2))) {
next
}
df <- readTrace(path = read_run1, burnin = 0.1)
df[[2]] <- readTrace(path = read_run2, burnin = 0.1)[[1]]
df[[1]]$run <- "run 1"
df[[2]]$run <- "run 2"
dfx <- bind_rows(df[[1]], df[[2]]) %>%
select(-starts_with(c("theta_compare", "alpha_compare", "rho_compare", "sigma2_compare", "halflife_compare", "stv_compare")))
par=alpha
par="alpha"
if (this_state == "sd"){
dfs <- process_par(par, "sd")
} else {
dfs <- process_par(par, "stateless")
}
dfs[[2]]
View(pars_sd)
for (i in 1:nrow(grid)){
this_row = grid[i,]
this_num_sim = this_row[[1]]
this_state = this_row[[2]]
this_move = this_row[[3]]
this_link = this_row[[4]]
this_combo = paste0(c("sim", this_num_sim, this_state, this_move, this_link), collapse = "_")
read_run1 <- paste0(dir_in, paste0(c("sim", this_num_sim, this_state, "run_1", this_move, this_link), collapse = "_"), ".log")
read_run2 <- paste0(dir_in, paste0(c("sim", this_num_sim, this_state, "run_2", this_move, this_link), collapse = "_"), ".log")
if ( isFALSE(file.exists(read_run1)) | isFALSE(file.exists(read_run2))) {
next
}
df <- readTrace(path = read_run1, burnin = 0.1)
df[[2]] <- readTrace(path = read_run2, burnin = 0.1)[[1]]
df[[1]]$run <- "run 1"
df[[2]]$run <- "run 2"
dfx <- bind_rows(df[[1]], df[[2]]) %>%
select(-starts_with(c("theta_compare", "alpha_compare", "rho_compare", "sigma2_compare", "halflife_compare", "stv_compare")))
for (par in pars){
if (this_state == "sd"){
dfs <- process_par(par, "sd")
} else {
dfs <- process_par(par, "stateless")
}
df_par <- dfs[[1]]
df_par_meantrue <- dfs[[2]]
this_combo_par <- paste0(this_combo, "_", par)
plot_par(par_name=par, df_par, df_par_meantrue, dir_out, this_combo_par)
}
}
process_par <- function(par, sdORsx, num_sim){
df_par <- pivot_longer(dfx, starts_with(par), names_to = "par")
df_mean_true <- df_par %>%
group_by(par, run) %>%
summarize(mean = mean(value))
par_0 <- paste0(par, "_0")
par_1 <- paste0(par, "_1")
if (sdORsx == "sd"){
df_mean_true$true <- c(rep(pars_sd[[par_0]][num_sim], 2), rep(pars_sd[[par_1]][1], 2))
} else {
df_mean_true$true <- c(rep(pars_stateless[[par_0]][num_sim], 4))
}
return(list(df_par, df_mean_true))
}
# plot non-DPP
num_sim = 3
sdORsx   = c("sd", "stateless")
moves       = c("mv", "mvAVM", "2mv")
link = c("linkedPrior", "unlinkedPrior")
grid = expand.grid(num_sim=1:num_sim, sdORsx=sdORsx, moves=moves, link=link, stringsAsFactors=FALSE)
for (i in 1:nrow(grid)){
this_row = grid[i,]
this_num_sim = this_row[[1]]
this_state = this_row[[2]]
this_move = this_row[[3]]
this_link = this_row[[4]]
this_combo = paste0(c("sim", this_num_sim, this_state, this_move, this_link), collapse = "_")
read_run1 <- paste0(dir_in, paste0(c("sim", this_num_sim, this_state, "run_1", this_move, this_link), collapse = "_"), ".log")
read_run2 <- paste0(dir_in, paste0(c("sim", this_num_sim, this_state, "run_2", this_move, this_link), collapse = "_"), ".log")
if ( isFALSE(file.exists(read_run1)) | isFALSE(file.exists(read_run2))) {
next
}
df <- readTrace(path = read_run1, burnin = 0.1)
df[[2]] <- readTrace(path = read_run2, burnin = 0.1)[[1]]
df[[1]]$run <- "run 1"
df[[2]]$run <- "run 2"
dfx <- bind_rows(df[[1]], df[[2]]) %>%
select(-starts_with(c("theta_compare", "alpha_compare", "rho_compare", "sigma2_compare", "halflife_compare", "stv_compare")))
for (par in pars){
if (this_state == "sd"){
dfs <- process_par(par, "sd", this_num_sim)
} else {
dfs <- process_par(par, "stateless", this_num_sim)
}
df_par <- dfs[[1]]
df_par_meantrue <- dfs[[2]]
this_combo_par <- paste0(this_combo, "_", par)
plot_par(par_name=par, df_par, df_par_meantrue, dir_out, this_combo_par)
}
}
grid[15]
grid[15,]
grid[25,]
grid[20,]
grid[28,]
i=28
this_row = grid[i,]
this_num_sim = this_row[[1]]
this_state = this_row[[2]]
this_combo = paste0(c("sim", this_num_sim, this_state, "DPP"), collapse = "_")
read_run1 <- paste0(dir_in, paste0(c("sim", this_num_sim, this_state, "run_1_DPP.log"), collapse = "_"))
read_run2 <- paste0(dir_in, paste0(c("sim", this_num_sim, this_state, "run_2_DPP.log"), collapse = "_"))
if ( isFALSE(file.exists(read_run1)) | isFALSE(file.exists(read_run2))) {
next
}
df <- readTrace(path = read_run1, burnin = 0.1)
df[[2]] <- readTrace(path = read_run2, burnin = 0.1)[[1]]
df[[1]]$run <- "run 1"
df[[2]]$run <- "run 2"
dfx <- bind_rows(df[[1]], df[[2]]) %>%
select(-starts_with(c("theta_compare", "alpha_compare", "rho_compare", "sigma2_compare", "halflife_compare", "stv_compare")))
par=theta
par="theta"
grid[28,]
grid[32,]
grid[34,]
grid[16,]
grid = expand.grid(num_sim=1:num_sim, sdORsx=sdORsx, stringsAsFactors=FALSE)
grid
# plot non-DPP
num_sim = 3
sdORsx   = c("sd", "stateless")
moves       = c("mv", "mvAVM", "2mv")
link = c("linkedPrior", "unlinkedPrior")
grid = expand.grid(num_sim=1:num_sim, sdORsx=sdORsx, moves=moves, link=link, stringsAsFactors=FALSE)
grid
i=5
this_row = grid[i,]
this_num_sim = this_row[[1]]
this_state = this_row[[2]]
this_move = this_row[[3]]
this_link = this_row[[4]]
this_combo = paste0(c("sim", this_num_sim, this_state, this_move, this_link), collapse = "_")
read_run1 <- paste0(dir_in, paste0(c("sim", this_num_sim, this_state, "run_1", this_move, this_link), collapse = "_"), ".log")
read_run2 <- paste0(dir_in, paste0(c("sim", this_num_sim, this_state, "run_2", this_move, this_link), collapse = "_"), ".log")
if ( isFALSE(file.exists(read_run1)) | isFALSE(file.exists(read_run2))) {
next
}
df <- readTrace(path = read_run1, burnin = 0.1)
df[[2]] <- readTrace(path = read_run2, burnin = 0.1)[[1]]
df[[1]]$run <- "run 1"
df[[2]]$run <- "run 2"
dfx <- bind_rows(df[[1]], df[[2]]) %>%
select(-starts_with(c("theta_compare", "alpha_compare", "rho_compare", "sigma2_compare", "halflife_compare", "stv_compare")))
this_num_sim
if (this_state == "sd"){
dfs <- process_par(par, "sd", this_num_sim)
} else {
dfs <- process_par(par, "stateless", this_num_sim)
}
df_par <- dfs[[1]]
df_par_meantrue <- dfs[[2]]
df_par_meantrue
this_combo_par <- paste0(this_combo, "_", par)
plot_par(par_name=par, df_par, df_par_meantrue, dir_out, this_combo_par)
grid[5,]
for (i in 1:nrow(grid)){
this_row = grid[i,]
this_num_sim = this_row[[1]]
this_state = this_row[[2]]
this_move = this_row[[3]]
this_link = this_row[[4]]
this_combo = paste0(c("sim", this_num_sim, this_state, this_move, this_link), collapse = "_")
read_run1 <- paste0(dir_in, paste0(c("sim", this_num_sim, this_state, "run_1", this_move, this_link), collapse = "_"), ".log")
read_run2 <- paste0(dir_in, paste0(c("sim", this_num_sim, this_state, "run_2", this_move, this_link), collapse = "_"), ".log")
if ( isFALSE(file.exists(read_run1)) | isFALSE(file.exists(read_run2))) {
next
}
df <- readTrace(path = read_run1, burnin = 0.1)
df[[2]] <- readTrace(path = read_run2, burnin = 0.1)[[1]]
df[[1]]$run <- "run 1"
df[[2]]$run <- "run 2"
dfx <- bind_rows(df[[1]], df[[2]]) %>%
select(-starts_with(c("theta_compare", "alpha_compare", "rho_compare", "sigma2_compare", "halflife_compare", "stv_compare")))
for (par in pars){
if (this_state == "sd"){
dfs <- process_par(par, "sd", this_num_sim)
} else {
dfs <- process_par(par, "stateless", this_num_sim)
}
df_par <- dfs[[1]]
df_par_meantrue <- dfs[[2]]
this_combo_par <- paste0(this_combo, "_", par)
plot_par(par_name=par, df_par, df_par_meantrue, dir_out, this_combo_par)
}
}
process_par <- function(par, sdORsx, num_sim){
df_par <- pivot_longer(dfx, starts_with(par), names_to = "par")
df_mean_true <- df_par %>%
group_by(par, run) %>%
summarize(mean = mean(value))
par_0 <- paste0(par, "_0")
par_1 <- paste0(par, "_1")
if (sdORsx == "sd"){
df_mean_true$true <- c(rep(pars_sd[[par_0]][num_sim], 2), rep(pars_sd[[par_1]][num_sim], 2))
} else {
df_mean_true$true <- c(rep(pars_stateless[[par_0]][num_sim], 4))
}
return(list(df_par, df_mean_true))
}
for (i in 1:nrow(grid)){
this_row = grid[i,]
this_num_sim = this_row[[1]]
this_state = this_row[[2]]
this_move = this_row[[3]]
this_link = this_row[[4]]
this_combo = paste0(c("sim", this_num_sim, this_state, this_move, this_link), collapse = "_")
read_run1 <- paste0(dir_in, paste0(c("sim", this_num_sim, this_state, "run_1", this_move, this_link), collapse = "_"), ".log")
read_run2 <- paste0(dir_in, paste0(c("sim", this_num_sim, this_state, "run_2", this_move, this_link), collapse = "_"), ".log")
if ( isFALSE(file.exists(read_run1)) | isFALSE(file.exists(read_run2))) {
next
}
df <- readTrace(path = read_run1, burnin = 0.1)
df[[2]] <- readTrace(path = read_run2, burnin = 0.1)[[1]]
df[[1]]$run <- "run 1"
df[[2]]$run <- "run 2"
dfx <- bind_rows(df[[1]], df[[2]]) %>%
select(-starts_with(c("theta_compare", "alpha_compare", "rho_compare", "sigma2_compare", "halflife_compare", "stv_compare")))
for (par in pars){
if (this_state == "sd"){
dfs <- process_par(par, "sd", this_num_sim)
} else {
dfs <- process_par(par, "stateless", this_num_sim)
}
df_par <- dfs[[1]]
df_par_meantrue <- dfs[[2]]
this_combo_par <- paste0(this_combo, "_", par)
plot_par(par_name=par, df_par, df_par_meantrue, dir_out, this_combo_par)
}
}
# plot DPP as well
num_sim = 3
sdORsx   = c("sd", "stateless")
grid = expand.grid(num_sim=1:num_sim, sdORsx=sdORsx, stringsAsFactors=FALSE)
for (i in 1:nrow(grid)){
this_row = grid[i,]
this_num_sim = this_row[[1]]
this_state = this_row[[2]]
this_combo = paste0(c("sim", this_num_sim, this_state, "DPP"), collapse = "_")
read_run1 <- paste0(dir_in, paste0(c("sim", this_num_sim, this_state, "run_1_DPP.log"), collapse = "_"))
read_run2 <- paste0(dir_in, paste0(c("sim", this_num_sim, this_state, "run_2_DPP.log"), collapse = "_"))
if ( isFALSE(file.exists(read_run1)) | isFALSE(file.exists(read_run2))) {
next
}
df <- readTrace(path = read_run1, burnin = 0.1)
df[[2]] <- readTrace(path = read_run2, burnin = 0.1)[[1]]
df[[1]]$run <- "run 1"
df[[2]]$run <- "run 2"
dfx <- bind_rows(df[[1]], df[[2]]) %>%
select(-starts_with(c("theta_compare", "alpha_compare", "rho_compare", "sigma2_compare", "halflife_compare", "stv_compare")))
for (par in pars){
if (this_state == "sd"){
dfs <- process_par(par, "sd", this_num_sim)
} else {
dfs <- process_par(par, "stateless", this_num_sim)
}
df_par <- dfs[[1]]
df_par_meantrue <- dfs[[2]]
this_combo_par <- paste0(this_combo, "_", par)
plot_par(par_name=par, df_par, df_par_meantrue, dir_out, this_combo_par)
}
}
