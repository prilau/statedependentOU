"0.6 TH"))
med_prob_theta$stv = ifelse(med_prob_theta$combo %in% c(1,4,7), "0.5 v",
ifelse(med_prob_theta$combo %in% c(2, 5, 8), "1 v",
"2 v"))
mean_prob_theta=med_prob_theta
p1 <- ggplot(grid, aes(x=dtheta, y=prob)) +
geom_point(aes(x = dtheta, y=prob), color="grey", alpha=0.5) +
geom_point(data=mean_prob_theta, aes(x = bin, y=mean_prob, group = combo), color="black") +
geom_line(data=mean_prob_theta, aes(x = bin, y=mean_prob, group=combo), color="black", linetype="dashed") +
theme_bw() +
labs(x = "theta1 - theta2", y = "P(theta1 > theta2)") +
geom_hline(mapping = aes(yintercept = upper), data=thresholds, linetype = "dashed", color = "brown") +
geom_hline(mapping = aes(yintercept = lower), data=thresholds, linetype = "dashed", color = "brown") +
ylim(c(0, 1)) +
facet_grid(rows = vars(stv), col = vars(halflife)) +
ggtitle("Power of theta")
p1
bins_between_thresholds <- mean_prob_theta %>%
group_by(combo) %>%
summarise(i025_1 = min(bin[which(mean_prob > 0.025)]),
i025_2 = min(bin[which(mean_prob > 0.025)])-1,
i975_1 = max(bin[which(mean_prob < 0.975)]),
i975_2 = max(bin[which(mean_prob < 0.975)]+1))
bins_between_thresholds
mean_prob_theta <- grid %>%
mutate(bin = round(dtheta*2, digits = 0)/2) %>%
group_by(combo, bin) %>%
summarise(mean_prob=mean(prob))
mean_prob_theta$halflife = ifelse(mean_prob_theta$combo %in% 1:3, "0.1 TH",
ifelse(mean_prob_theta$combo %in% 4:6, "0.3 TH",
"0.6 TH"))
mean_prob_theta$stv = ifelse(mean_prob_theta$combo %in% c(1,4,7), "0.5 v",
ifelse(mean_prob_theta$combo %in% c(2, 5, 8), "1 v",
"2 v"))
mean_prob_theta
bins_between_thresholds <- mean_prob_theta %>%
group_by(combo) %>%
summarise(i025_1 = min(bin[which(mean_prob > 0.025)]),
i025_2 = min(bin[which(mean_prob > 0.025)])-0.5,
i975_1 = max(bin[which(mean_prob < 0.975)]),
i975_2 = max(bin[which(mean_prob < 0.975)]+0.5))
bins_between_thresholds
p1 <- ggplot(grid, aes(x=dtheta, y=prob)) +
geom_point(aes(x = dtheta, y=prob), color="grey", alpha=0.5) +
geom_point(data=mean_prob_theta, aes(x = bin, y=mean_prob, group = combo), color="black") +
geom_line(data=mean_prob_theta, aes(x = bin, y=mean_prob, group=combo), color="black", linetype="dashed") +
theme_bw() +
labs(x = "theta1 - theta2", y = "P(theta1 > theta2)") +
geom_hline(mapping = aes(yintercept = upper), data=thresholds, linetype = "dashed", color = "brown") +
geom_hline(mapping = aes(yintercept = lower), data=thresholds, linetype = "dashed", color = "brown") +
ylim(c(0, 1)) +
facet_grid(rows = vars(stv), col = vars(halflife)) +
ggtitle("Power of theta")
p1
bins_between_thresholds
for (i in 1:num_combo){
x = c(bins_between_thresholds$i025_1[i], bins_between_thresholds$i025_2[i])
y = mean_prob_theta %>% filter(combo == i, bin %in% x) %>%
ungroup() %>%
select(mean_prob) %>%
unlist()
eq = unname(lm(y~x)[[1]])
intercepts$i025[i] = (0.025 - eq[1]) / eq[2]
x = c(bins_between_thresholds$i975_1[i], bins_between_thresholds$i975_2[i])
y = mean_prob_theta %>% filter(combo == i, bin %in% x) %>%
ungroup() %>%
select(mean_prob) %>%
unlist()
eq = unname(lm(y~x)[[1]])
intercepts$i975[i] = (0.975 - eq[1]) / eq[2]
}
i
x = c(bins_between_thresholds$i025_1[i], bins_between_thresholds$i025_2[i])
x
y = mean_prob_theta %>% filter(combo == i, bin %in% x) %>%
ungroup() %>%
select(mean_prob) %>%
unlist()
y
x = c(bins_between_thresholds$i025_1[i], bins_between_thresholds$i025_2[i])
y = mean_prob_theta %>% filter(combo == i, bin %in% x) %>%
ungroup() %>%
select(mean_prob) %>%
unlist()
eq = unname(lm(y~x)[[1]])
intercepts$i025[i] = (0.025 - eq[1]) / eq[2]
x = c(bins_between_thresholds$i975_1[i], bins_between_thresholds$i975_2[i])
x
y = mean_prob_theta %>% filter(combo == i, bin %in% x) %>%
ungroup() %>%
select(mean_prob) %>%
unlist()
y
bins_between_thresholds <- mean_prob_theta %>%
group_by(combo) %>%
summarise(i025_1 = min(bin[which(mean_prob > 0.025)]),
i025_2 = min(bin[which(mean_prob > 0.025)-1]),
i975_1 = max(bin[which(mean_prob < 0.975)]),
i975_2 = max(bin[which(mean_prob < 0.975)+1]))
bins_between_thresholds
intercepts <- tibble(i025=NA, i975=NA,
combo=1:num_combo)
for (i in 1:num_combo){
x = c(bins_between_thresholds$i025_1[i], bins_between_thresholds$i025_2[i])
y = mean_prob_theta %>% filter(combo == i, bin %in% x) %>%
ungroup() %>%
select(mean_prob) %>%
unlist()
if (length(y)==2){
eq = unname(lm(y~x)[[1]])
intercepts$i025[i] = (0.025 - eq[1]) / eq[2]
}
x = c(bins_between_thresholds$i975_1[i], bins_between_thresholds$i975_2[i])
y = mean_prob_theta %>% filter(combo == i, bin %in% x) %>%
ungroup() %>%
select(mean_prob) %>%
unlist()
if (length(y)==2){
eq = unname(lm(y~x)[[1]])
intercepts$i975[i] = (0.975 - eq[1]) / eq[2]
}
}
intercepts$width = intercepts$i975-intercepts$i025
intercepts$halflife = ifelse(intercepts$combo %in% 1:3, "0.1 TH",
ifelse(intercepts$combo %in% 4:6, "0.3 TH",
"0.6 TH"))
intercepts$stv = ifelse(intercepts$combo %in% c(1,4,7), "0.5 v",
ifelse(intercepts$combo %in% c(2, 5, 8), "1 v",
"2 v"))
intercepts
# summarise false negative rate
# using width of dtheta where 0.025 < P(i>j) < 0.975 as proxy
p2 <- ggplot(intercepts, aes(x=halflife, y=width)) +
geom_point(aes(x = halflife, y=width, group=stv, color=stv)) +
geom_line(aes(x = halflife, y=width, group=stv, color=stv)) +
theme_bw() +
#labs(x = "dtheta", y = "Phylogenetic half-life") +
ggtitle("Width of FN dtheta")
p2
# summarise false negative rate
# using width of dtheta where 0.025 < P(i>j) < 0.975 as proxy
p2 <- ggplot(intercepts, aes(x=halflife, y=width)) +
geom_point(aes(x = halflife, y=width, group=stv, color=stv)) +
geom_line(aes(x = halflife, y=width, group=stv, color=stv)) +
theme_bw() +
#labs(x = "dtheta", y = "Phylogenetic half-life") +
ggtitle("Width of dtheta")
filename <- paste0(dir_out, "fn_dtheta.pdf")
ggsave(filename, p3, width = 100, height = 100, units = "mm")
ggsave(filename, p2, width = 100, height = 100, units = "mm")
# read 'true' parameters used for simulations
# v = empirical variance of log body size (kg) in mammals; ~= 12.39784
par_values <- read.csv("data/2_simulation/power_theta/pars.csv") %>%
mutate(stv = paste0(round(stv / 12.39784, 1), " v"),
halflife = paste0(halflife, " TH"))
par_values
typeof(par_values$halflife[1])
readTrace(filename, burnin = 0.0)[[1]] %>%
select("theta_compare_12") %>%
summarise(prob = mean(theta_compare_12))
filename <- paste0(dir_in, "sim_", i, "_run_1.log")
readTrace(filename, burnin = 0.0)[[1]] %>%
select("theta_compare_12") %>%
summarise(prob = mean(theta_compare_12))
readTrace(filename, burnin = 0.0)[[1]] %>%
select("theta_compare_12") %>%
summarise(prob = mean(theta_compare_12)) %>%
unlist() %>%
unname()
grid$prob[i] <- readTrace(filename, burnin = 0.0)[[1]] %>%
select("theta_compare_12") %>%
summarise(prob = mean(theta_compare_12)) %>%
unlist() %>%
unname()
# for each combo of background parameters
# bin replicates by 'true' dthetas
# and calculate the mean P(theta_1 > theta_2) for each bin
mean_prob_theta <- grid %>%
mutate(bin = round(dtheta*2, digits = 0)/2) %>%  # bin size = 0.5
group_by(combo, bin) %>%
summarise(mean_prob=mean(prob)) %>%
mutate(halflife = ifelse(mean_prob_theta$combo %in% 1:3, "0.1 TH",
ifelse(mean_prob_theta$combo %in% 4:6, "0.3 TH",
"0.6 TH")),
stv = ifelse(mean_prob_theta$combo %in% c(1,4,7), "0.5 v",
ifelse(mean_prob_theta$combo %in% c(2, 5, 8), "1 v",
"2 v"))
)
grid %>%
mutate(bin = round(dtheta*2, digits = 0)/2) %>%  # bin size = 0.5
group_by(combo, bin) %>%
summarise(mean_prob=mean(prob))
# for each combo of background parameters
# bin replicates by 'true' dthetas
# and calculate the mean P(theta_1 > theta_2) for each bin
mean_prob_theta <- grid %>%
mutate(bin = round(dtheta*2, digits = 0)/2) %>%  # bin size = 0.5
group_by(combo, bin) %>%
summarise(mean_prob=mean(prob)) %>%
mutate(halflife = ifelse(combo %in% 1:3, "0.1 TH",
ifelse(combo %in% 4:6, "0.3 TH",
"0.6 TH")))
# for each combo of background parameters
# bin replicates by 'true' dthetas
# and calculate the mean P(theta_1 > theta_2) for each bin
mean_prob_theta <- grid %>%
mutate(bin = round(dtheta*2, digits = 0)/2) %>%  # bin size = 0.5
group_by(combo, bin) %>%
summarise(mean_prob=mean(prob)) %>%
mutate(halflife = ifelse(combo %in% 1:3, "0.1 TH",
ifelse(combo %in% 4:6, "0.3 TH",
"0.6 TH")),
stv = ifelse(combo %in% c(1,4,7), "0.5 v",
ifelse(combo %in% c(2, 5, 8), "1 v",
"2 v")))
mean_prob_theta
bins_between_thresholds <- mean_prob_theta %>%
group_by(combo) %>%
summarise(i025_1 = min(bin[which(mean_prob > 0.025)]),
i025_2 = min(bin[which(mean_prob > 0.025)-1]),
i975_1 = max(bin[which(mean_prob < 0.975)]),
i975_2 = max(bin[which(mean_prob < 0.975)+1]))
bins_between_thresholds
# for each combo
# bins between which probability intercepts with 0.025 or 0.975
intercepts <- mean_prob_theta %>%
group_by(combo) %>%
summarise(i025_1 = min(bin[which(mean_prob > 0.025)]),
i025_2 = min(bin[which(mean_prob > 0.025)-1]),
i975_1 = max(bin[which(mean_prob < 0.975)]),
i975_2 = max(bin[which(mean_prob < 0.975)+1]))
intercepts
for (i in 1:num_combo){
x = c(intercepts$i025_1[i], intercepts$i025_2[i])
y = mean_prob_theta %>% filter(combo == i, bin %in% x) %>%
ungroup() %>%
select(mean_prob) %>%
unlist()
# skip if one of the bin exceed the boundary
if (length(y)==2){
eq = unname(lm(y~x)[[1]])
intercepts$i025[i] = (0.025 - eq[1]) / eq[2]
}
x = c(intercepts$i975_1[i], intercepts$i975_2[i])
y = mean_prob_theta %>% filter(combo == i, bin %in% x) %>%
ungroup() %>%
select(mean_prob) %>%
unlist()
if (length(y)==2){
eq = unname(lm(y~x)[[1]])
intercepts$i975[i] = (0.975 - eq[1]) / eq[2]
}
}
# for each combo
# bins between which probability intercepts with 0.025 or 0.975
intercepts <- mean_prob_theta %>%
group_by(combo) %>%
summarise(i025_1 = min(bin[which(mean_prob > 0.025)]),
i025_2 = min(bin[which(mean_prob > 0.025)-1]),
i975_1 = max(bin[which(mean_prob < 0.975)]),
i975_2 = max(bin[which(mean_prob < 0.975)+1])) %>%
mutate(i025 = NA,
i975 = NA)
intercepts
for (i in 1:num_combo){
x = c(intercepts$i025_1[i], intercepts$i025_2[i])
y = mean_prob_theta %>% filter(combo == i, bin %in% x) %>%
ungroup() %>%
select(mean_prob) %>%
unlist()
# skip if one of the bin exceed the boundary
if (length(y)==2){
eq = unname(lm(y~x)[[1]])
intercepts$i025[i] = (0.025 - eq[1]) / eq[2]
}
x = c(intercepts$i975_1[i], intercepts$i975_2[i])
y = mean_prob_theta %>% filter(combo == i, bin %in% x) %>%
ungroup() %>%
select(mean_prob) %>%
unlist()
if (length(y)==2){
eq = unname(lm(y~x)[[1]])
intercepts$i975[i] = (0.975 - eq[1]) / eq[2]
}
}
intercepts <- intercepts %>%
mutate(width = i975-i025,
halflife = ifelse(combo %in% 1:3, "0.1 TH",
ifelse(combo %in% 4:6, "0.3 TH",
"0.6 TH")),
stv = ifelse(combo %in% c(1,4,7), "0.5 v",
ifelse(combo %in% c(2, 5, 8), "1 v",
"2 v")))
intercepts
# read 'true' parameters used for simulations
# v = empirical variance of log body size (kg) in mammals; ~= 12.39784
par_values <- read.csv("data/2_simulation/power_alpha/pars.csv") %>%
mutate(stv = paste0(round(stv / 12.39784, 1), " v"),
theta = paste0("{", theta_1, theta_2, "}"))
par_values
head(par_values)
grid <- expand.grid(sim=1:num_sim_per_combo, combo=1:num_combo)
# specify input and output directories
dir_in="output/2_simulation/power_alpha/"
dir_out="figures/2_simulation/power_alpha/"
# add background OU parameters to grid
grid$stv=par_values$stv
grid$theta=par_values$theta
grid
# add 'true' dalpha and dhalflife to grid
grid$dalpha=par_values$alpha_1 - par_values$alpha_2
grid$dhalflife=log(2) / grid$dalpha
grid
# add 'true' alphas ratio to grid
grid$ralpha=par_values$alpha_1 / par_values$alpha_2
grid$rhalflife= 1 / grid$ralpha
grid
# probability of alpha_1 > alpha_2
grid$prob=NA
# plot 2: concise plot where each point represents a background parameter combo
# width of dtheta where 0.025 < P(i>j) < 0.975 is used as proxy
# of false negative rate
p2 <- ggplot(intercepts, aes(x=halflife, y=width)) +
geom_point(aes(x = halflife, y=width, group=stv, color=stv)) +
geom_line(aes(x = halflife, y=width, group=stv, color=stv)) +
theme_bw() +
#labs(x = "dtheta", y = "Phylogenetic half-life") +
ggtitle("Width of dtheta")
p2
filename <- paste0(dir_out, "power_theta_2.pdf")
ggsave(filename, p2, width = 100, height = 100, units = "mm")
dir_out="figures/2_simulation/power_theta/"
p1 <- ggplot(grid, aes(x=dtheta, y=prob)) +
geom_point(aes(x = dtheta, y=prob), color="grey", alpha=0.5) +
geom_point(data=mean_prob, aes(x = bin, y=mean_prob, group = combo), color="black") +
geom_line(data=mean_prob, aes(x = bin, y=mean_prob, group=combo), color="black", linetype="dashed") +
theme_bw() +
labs(x = "theta1 - theta2", y = "P(theta1 > theta2)") +
geom_hline(mapping = aes(yintercept = upper), data=thresholds, linetype = "dashed", color = "brown") +
geom_hline(mapping = aes(yintercept = lower), data=thresholds, linetype = "dashed", color = "brown") +
ylim(c(0, 1)) +
facet_grid(rows = vars(stv), col = vars(halflife)) +
ggtitle("Power of theta")
mean_prob=mean_prob_theta
p1 <- ggplot(grid, aes(x=dtheta, y=prob)) +
geom_point(aes(x = dtheta, y=prob), color="grey", alpha=0.5) +
geom_point(data=mean_prob, aes(x = bin, y=mean_prob, group = combo), color="black") +
geom_line(data=mean_prob, aes(x = bin, y=mean_prob, group=combo), color="black", linetype="dashed") +
theme_bw() +
labs(x = "theta1 - theta2", y = "P(theta1 > theta2)") +
geom_hline(mapping = aes(yintercept = upper), data=thresholds, linetype = "dashed", color = "brown") +
geom_hline(mapping = aes(yintercept = lower), data=thresholds, linetype = "dashed", color = "brown") +
ylim(c(0, 1)) +
facet_grid(rows = vars(stv), col = vars(halflife)) +
ggtitle("Power of theta")
p1
# uncomment the following line if there is an existing grid
load("output/2_simulation/power_theta/grid.Rda")
p1 <- ggplot(grid, aes(x=dtheta, y=prob)) +
geom_point(aes(x = dtheta, y=prob), color="grey", alpha=0.5) +
geom_point(data=mean_prob, aes(x = bin, y=mean_prob, group = combo), color="black") +
geom_line(data=mean_prob, aes(x = bin, y=mean_prob, group=combo), color="black", linetype="dashed") +
theme_bw() +
labs(x = "theta1 - theta2", y = "P(theta1 > theta2)") +
geom_hline(mapping = aes(yintercept = upper), data=thresholds, linetype = "dashed", color = "brown") +
geom_hline(mapping = aes(yintercept = lower), data=thresholds, linetype = "dashed", color = "brown") +
ylim(c(0, 1)) +
facet_grid(rows = vars(stv), col = vars(halflife)) +
ggtitle("Power of theta")
p1
filename <- paste0(dir_out, "power_theta_1.pdf")
ggsave(filename, p1, width = 100, height = 100, units = "mm")
# plot 2: concise plot where each point represents a background parameter combo
# width of dtheta where 0.025 < P(i>j) < 0.975 is used as proxy
# of false negative rate
p2 <- ggplot(intercepts, aes(x=halflife, y=width)) +
geom_point(aes(x = halflife, y=width, group=stv, color=stv)) +
geom_line(aes(x = halflife, y=width, group=stv, color=stv)) +
theme_bw() +
#labs(x = "dtheta", y = "Phylogenetic half-life") +
ggtitle("Width of dtheta")
p2
filename <- paste0(dir_out, "power_theta_2.pdf")
ggsave(filename, p2, width = 100, height = 100, units = "mm")
loess(prob~dtheta, grid)
lo.50 loess(prob~dtheta, grid, span = 0.5)
lo50 <- loess(prob~dtheta, grid, span = 0.5)
lo50
predict(lo50)
order(predict(lo50))
predict(lo50)[order(predict(lo50))]
lo50 <- predict(loess(prob~dtheta, grid, span = 0.5))
p1 <- ggplot(grid, aes(x=dtheta, y=prob)) +
geom_point(aes(x = dtheta, y=prob), color="grey", alpha=0.5) +
geom_point(data=mean_prob, aes(x = bin, y=mean_prob, group = combo), color="black") +
geom_line(data=mean_prob, aes(x = bin, y=mean_prob, group=combo), color="black", linetype="dashed") +
theme_bw() +
labs(x = "theta1 - theta2", y = "P(theta1 > theta2)") +
geom_hline(mapping = aes(yintercept = upper), data=thresholds, linetype = "dashed", color = "brown") +
geom_hline(mapping = aes(yintercept = lower), data=thresholds, linetype = "dashed", color = "brown") +
ylim(c(0, 1)) +
facet_grid(rows = vars(stv), col = vars(halflife)) +
ggtitle("Power of theta") +
geom_line(aes(y=lo50))
p1
typeof(lo50)
lo50$stv="0.5 v"
length(predict(loess(prob~dtheta, small_grid, span = 0.5)))
length(predict(loess(prob~dtheta, grid, span = 0.5)))
i=1
grid$pred = NA
grid$pred[which(grid$combo==i)]
predict(loess(prob~dtheta, grid[which(grid$combo==i)], span = 0.5))
grid$pred[which(grid$combo==i)] <- predict(loess(prob~dtheta, grid[which(grid$combo==i),], span = 0.5))
grid$pred[which(grid$combo==i)]
grid$pred = NA
for (i in 1:num_combo){
grid$pred[which(grid$combo==i)] <- predict(loess(prob~dtheta, grid[which(grid$combo==i),], span = 0.5))
}
p1 <- ggplot(grid, aes(x=dtheta, y=prob)) +
geom_point(aes(x = dtheta, y=prob), color="grey", alpha=0.5) +
geom_point(data=mean_prob, aes(x = bin, y=mean_prob, group = combo), color="black") +
geom_line(data=mean_prob, aes(x = bin, y=mean_prob, group=combo), color="black", linetype="dashed") +
geom_line(aes(y=pred)) +
theme_bw() +
labs(x = "theta1 - theta2", y = "P(theta1 > theta2)") +
geom_hline(mapping = aes(yintercept = upper), data=thresholds, linetype = "dashed", color = "brown") +
geom_hline(mapping = aes(yintercept = lower), data=thresholds, linetype = "dashed", color = "brown") +
ylim(c(0, 1)) +
facet_grid(rows = vars(stv), col = vars(halflife)) +
ggtitle("Power of theta")
p1
p1 <- ggplot(grid, aes(x=dtheta, y=prob)) +
geom_point(aes(x = dtheta, y=prob), color="grey", alpha=0.5) +
#geom_point(data=mean_prob, aes(x = bin, y=mean_prob, group = combo), color="black") +
#geom_line(data=mean_prob, aes(x = bin, y=mean_prob, group=combo), color="black", linetype="dashed") +
geom_line(aes(y=pred)) +
theme_bw() +
labs(x = "theta1 - theta2", y = "P(theta1 > theta2)") +
geom_hline(mapping = aes(yintercept = upper), data=thresholds, linetype = "dashed", color = "brown") +
geom_hline(mapping = aes(yintercept = lower), data=thresholds, linetype = "dashed", color = "brown") +
ylim(c(0, 1)) +
facet_grid(rows = vars(stv), col = vars(halflife)) +
ggtitle("Power of theta")
p1
p1 <- ggplot(grid, aes(x=dtheta, y=prob)) +
geom_point(aes(x = dtheta, y=prob), color="grey", alpha=0.5) +
#geom_point(data=mean_prob, aes(x = bin, y=mean_prob, group = combo), color="black") +
#geom_line(data=mean_prob, aes(x = bin, y=mean_prob, group=combo), color="black", linetype="dashed") +
geom_line(aes(y=pred), alpha=1.0) +
theme_bw() +
labs(x = "theta1 - theta2", y = "P(theta1 > theta2)") +
geom_hline(mapping = aes(yintercept = upper), data=thresholds, linetype = "dashed", color = "brown") +
geom_hline(mapping = aes(yintercept = lower), data=thresholds, linetype = "dashed", color = "brown") +
ylim(c(0, 1)) +
facet_grid(rows = vars(stv), col = vars(halflife)) +
ggtitle("Power of theta")
p1
p1 <- ggplot(grid, aes(x=dtheta, y=prob)) +
geom_point(aes(x = dtheta, y=prob), color="grey", alpha=0.5) +
geom_point(data=mean_prob, aes(x = bin, y=mean_prob, group = combo), color="black") +
#geom_line(data=mean_prob, aes(x = bin, y=mean_prob, group=combo), color="black", linetype="dashed") +
geom_line(aes(y=pred), alpha=1.0) +
theme_bw() +
labs(x = "theta1 - theta2", y = "P(theta1 > theta2)") +
geom_hline(mapping = aes(yintercept = upper), data=thresholds, linetype = "dashed", color = "brown") +
geom_hline(mapping = aes(yintercept = lower), data=thresholds, linetype = "dashed", color = "brown") +
ylim(c(0, 1)) +
facet_grid(rows = vars(stv), col = vars(halflife)) +
ggtitle("Power of theta")
p1
# for each combo of background parameters
# bin replicates by 'true' dthetas
# and calculate the mean P(theta_1 > theta_2) for each bin
mean_prob <- grid %>%
mutate(bin = round(dtheta, digits = 0)) %>%  # bin size = 1
group_by(combo, bin) %>%
summarise(mean_prob=mean(prob)) %>%
mutate(halflife = ifelse(combo %in% 1:3, "0.1 TH",
ifelse(combo %in% 4:6, "0.3 TH",
"0.6 TH")),
stv = ifelse(combo %in% c(1,4,7), "0.5 v",
ifelse(combo %in% c(2, 5, 8), "1 v",
"2 v")))
p1 <- ggplot(grid, aes(x=dtheta, y=prob)) +
geom_point(aes(x = dtheta, y=prob), color="grey", alpha=0.5) +
geom_point(data=mean_prob, aes(x = bin, y=mean_prob, group = combo), color="black") +
#geom_line(data=mean_prob, aes(x = bin, y=mean_prob, group=combo), color="black", linetype="dashed") +
geom_line(aes(y=pred), alpha=1.0) +
theme_bw() +
labs(x = "theta1 - theta2", y = "P(theta1 > theta2)") +
geom_hline(mapping = aes(yintercept = upper), data=thresholds, linetype = "dashed", color = "brown") +
geom_hline(mapping = aes(yintercept = lower), data=thresholds, linetype = "dashed", color = "brown") +
ylim(c(0, 1)) +
facet_grid(rows = vars(stv), col = vars(halflife)) +
ggtitle("Power of theta")
p1
p1 <- ggplot(grid, aes(x=dtheta, y=prob)) +
geom_line(aes(y=pred), alpha=1.0) +
geom_point(aes(x = dtheta, y=prob), color="grey", alpha=0.5) +
geom_point(data=mean_prob, aes(x = bin, y=mean_prob, group = combo), color="black") +
#geom_line(data=mean_prob, aes(x = bin, y=mean_prob, group=combo), color="black", linetype="dashed") +
theme_bw() +
labs(x = "theta1 - theta2", y = "P(theta1 > theta2)") +
geom_hline(mapping = aes(yintercept = upper), data=thresholds, linetype = "dashed", color = "brown") +
geom_hline(mapping = aes(yintercept = lower), data=thresholds, linetype = "dashed", color = "brown") +
ylim(c(0, 1)) +
facet_grid(rows = vars(stv), col = vars(halflife)) +
ggtitle("Power of theta")
p1
filename <- paste0(dir_out, "power_theta_1.pdf")
ggsave(filename, p1, width = 100, height = 100, units = "mm")
