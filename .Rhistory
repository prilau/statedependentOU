"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"1",
"Pt",
"Pt",
"2, 3",
"Pt",
"Pt",
"2, 3",
"2, 3",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"3",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"2, 3",
"Pt",
"Pt",
"3",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"2, 3",
"3",
"2, 3",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"3",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"2, 3",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"2, 3",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"2, 3",
"Pt",
"Pt",
"Pt",
"Pt",
"2, 3",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"2, 3",
"2, 3",
"2, 3",
"2, 3"
)
write.csv(cb, "/Users/priscillalau/Desktop/data.csv", rownames=T)
write.csv(cb, "/Users/priscillalau/Desktop/data.csv", row.names=T)
k
sp_sorted <-
attach(mtcars)
# sort by mpg
newdata <- mtcars[order(mpg),]
newdata
View(newdata)
# sort by mpg and cyl
newdata <- mtcars[order(mpg, cyl),]
View(newdata)
# sort by mpg
newdata <- mtcars[order(mpg),]
# sort by mpg and cyl
newdata <- mtcars[order(mpg, cyl),]
#sort by mpg (ascending) and cyl (descending)
newdata <- mtcars[order(mpg, -cyl),]
View(newdata)
detach(mtcars)
?ggarrange
library(ggplot2)
library(cowplot)
library(tidyr)
library(dplyr)
library(knitr)
library(jpeg)
library(patchwork)
library(leaflet)
library(tidyverse)
library(readr)
library(broom)
library(car)
library(Hmisc)
library(ggimage)
library(png)
knitr::opts_chunk$set(echo=T,
eval=T,
message = F,
warning=F,
error = F,
cache = F,
tidy = T,
size="footnotesize",
fig.pos='H',
results='hide',
fig.lp='fig:',
fig.align = 'center',
fig.path='figures/example-',
cache.path = 'cache/example-',
tidy.opts=list(width.cutoff=60)
)
library(ggarrange)
???ggarrange
library(patchwork)
library(ggplot2)
library(cowplot)
library(tidyr)
library(dplyr)
library(knitr)
library(jpeg)
library(patchwork)
library(leaflet)
library(tidyverse)
library(readr)
library(broom)
library(car)
library(Hmisc)
library(ggimage)
library(png)
knitr::opts_chunk$set(echo=T,
eval=T,
message = F,
warning=F,
error = F,
cache = F,
tidy = T,
size="footnotesize",
fig.pos='H',
results='hide',
fig.lp='fig:',
fig.align = 'center',
fig.path='figures/example-',
cache.path = 'cache/example-',
tidy.opts=list(width.cutoff=60)
)
players <- read_csv("mlb-player-stats-Batters.csv")
hit <- read_csv("exit_velocity.csv")
comb <- hit %>% mutate(Player = paste0(first_name, " ", last_name)) %>%
inner_join(players, by = "Player")
colnames(comb)
trim <- comb[, -c(1:4, 7, 9:11, 13:18, 20, 22:23, 25, 30:33, 37, 39:41)] %>%
mutate(p_longhit = (`2B`+`3B`+HR)/H,
SF_1000 = 1000*SF/AB)
trim$pos_group <- ifelse(trim$Pos %in% c("1B", "2B", "3B", "SS"), "IF", trim$Pos)
trim <- trim %>%
select(-c(H, `2B`, `3B`, HR, SF, avg_distance)) %>%
select(4, 1:3, 5:12)
group.colors <- c(IF = "#a98467", OF = "#226f54", C ="#da2c38", DH = "#f4f0bb")
level_order <- c('C', '1B', '2B', '3B', 'SS', 'OF', 'DH')
pic <- readJPEG("baseball.jpg", native = T)
p1 <- trim %>%
group_by(pos_group) %>%
ggplot(aes(y = AVG,
x = factor(Pos, level = level_order),
fill = pos_group)) +
geom_boxplot() +
ylab("Batting average") +
xlab("Position") +
ggtitle("Batting average by position") +
scale_fill_manual(values=group.colors) +
theme(axis.text = element_text(size = 10),
legend.position = "none",
plot.title = element_text(hjust = 0.5)) +
inset_element(pic,
left = 0.8,
bottom = 0.6,
right = 1,
top = 1)
library(ggarrange)
mod.1c <- lm(AVG ~ avg_hit_angle + anglesweetspotpercent + avg_hit_speed, trim)
mod.1b <- lm(AVG ~ avg_hit_angle + anglesweetspotpercent , trim)
mod.1a <- lm(AVG ~ avg_hit_angle, trim)
anova(mod.1a, mod.1b, mod.1c)
mod.2c <- lm(AVG ~ avg_hit_speed + avg_hit_angle + anglesweetspotpercent, trim)
mod.2b <- lm(AVG ~ avg_hit_speed + avg_hit_angle , trim)
mod.2a <- lm(AVG ~ avg_hit_speed, trim)
anova(mod.2a, mod.2b, mod.2c)
mod.3c <- lm(AVG ~ anglesweetspotpercent + avg_hit_speed + avg_hit_angle, trim)
mod.3b <- lm(AVG ~ anglesweetspotpercent + avg_hit_speed , trim)
mod.3a <- lm(AVG ~ anglesweetspotpercent, trim)
anova(mod.3a, mod.3b, mod.3c)
mod <- lm(AVG ~ avg_hit_angle + anglesweetspotpercent,
data = trim )
mod <- lm(AVG ~ avg_hit_angle + anglesweetspotpercent,
data = trim )
#layout(matrix(1:4, 2, 2))
#par(mfrow=c(2,2))
pdf(file = "plot2.pdf", width = 8, height = 6)
plot(mod)
step(mod)
vif(mod)
attr <- sort(c("AVG", "avg_hit_angle", "anglesweetspotpercent", "avg_hit_speed", "SO", "p_longhit", "SF_1000", "AB"))
df <- trim[, attr] %>%
as.matrix() %>%
rcorr(type = "spearman") %>%
tidy()
dummy <- data.frame(column1 = attr,
column2 = attr,
estimate = NA,
p.value = NA)
df2 <- df %>%
dplyr::select(-n) %>%
bind_rows(dummy)
attr_labels <- c("Strikeout", "Sacrifice Fly", "% Long Hit", "Average Exit Velocity", "Average Hit Angle", "Batting Average", "% Sweet Spot", "At-bat")
p <- df2 %>%
ggplot(aes(x = column1,
y = column2)) +
geom_tile(aes(fill = estimate)) +
theme_minimal() +
geom_text(aes(label = round(estimate, digits = 2), family = "mono")) +
theme(axis.title = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 10,
colour = "#432818",
family = "mono"),
axis.text.x = element_text(angle = 40, hjust=1),
legend.position = "right",
legend.text = element_text(family = "mono"),
axis.ticks = element_blank()) +
scale_fill_gradient2(low = "#fd9e02",
mid = "white",
high = muted("#75b6c6"),
midpoint = 0,
space = "Lab",
na.value = "transparent",
guide = "colourbar",
aesthetics = "fill",
limits=c(-0.5, 0.5),
name = "") +
scale_x_discrete(labels = attr_labels) +
scale_y_discrete(labels = attr_labels)
library(scales)
mod.1c <- lm(AVG ~ avg_hit_angle + anglesweetspotpercent + avg_hit_speed, trim)
mod.1b <- lm(AVG ~ avg_hit_angle + anglesweetspotpercent , trim)
mod.1a <- lm(AVG ~ avg_hit_angle, trim)
anova(mod.1a, mod.1b, mod.1c)
mod.2c <- lm(AVG ~ avg_hit_speed + avg_hit_angle + anglesweetspotpercent, trim)
mod.2b <- lm(AVG ~ avg_hit_speed + avg_hit_angle , trim)
mod.2a <- lm(AVG ~ avg_hit_speed, trim)
anova(mod.2a, mod.2b, mod.2c)
mod.3c <- lm(AVG ~ anglesweetspotpercent + avg_hit_speed + avg_hit_angle, trim)
mod.3b <- lm(AVG ~ anglesweetspotpercent + avg_hit_speed , trim)
mod.3a <- lm(AVG ~ anglesweetspotpercent, trim)
anova(mod.3a, mod.3b, mod.3c)
mod <- lm(AVG ~ avg_hit_angle + anglesweetspotpercent,
data = trim )
mod <- lm(AVG ~ avg_hit_angle + anglesweetspotpercent,
data = trim )
#layout(matrix(1:4, 2, 2))
#par(mfrow=c(2,2))
pdf(file = "plot2.pdf", width = 8, height = 6)
plot(mod)
step(mod)
vif(mod)
attr <- sort(c("AVG", "avg_hit_angle", "anglesweetspotpercent", "avg_hit_speed", "SO", "p_longhit", "SF_1000", "AB"))
df <- trim[, attr] %>%
as.matrix() %>%
rcorr(type = "spearman") %>%
tidy()
dummy <- data.frame(column1 = attr,
column2 = attr,
estimate = NA,
p.value = NA)
df2 <- df %>%
dplyr::select(-n) %>%
bind_rows(dummy)
attr_labels <- c("Strikeout", "Sacrifice Fly", "% Long Hit", "Average Exit Velocity", "Average Hit Angle", "Batting Average", "% Sweet Spot", "At-bat")
p <- df2 %>%
ggplot(aes(x = column1,
y = column2)) +
geom_tile(aes(fill = estimate)) +
theme_minimal() +
geom_text(aes(label = round(estimate, digits = 2), family = "mono")) +
theme(axis.title = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 10,
colour = "#432818",
family = "mono"),
axis.text.x = element_text(angle = 40, hjust=1),
legend.position = "right",
legend.text = element_text(family = "mono"),
axis.ticks = element_blank()) +
scale_fill_gradient2(low = "#fd9e02",
mid = "white",
high = muted("#75b6c6"),
midpoint = 0,
space = "Lab",
na.value = "transparent",
guide = "colourbar",
aesthetics = "fill",
limits=c(-0.5, 0.5),
name = "") +
scale_x_discrete(labels = attr_labels) +
scale_y_discrete(labels = attr_labels)
p
ggsave(filename = "plot2.pdf", device = "pdf",
width = 20, height = 12, units = "cm")
library(patchwork)
mlb <- ((p1/p)) + plot_annotation(tag_levels = "A") + plot_layout(nrow = 2)
ggsave("mlb2.pdf", mlb, device = "pdf")
mlb <- ((p1/p)) + plot_layout(nrow = 2)
ggsave("mlb2.pdf", mlb, device = "pdf")
x = c(6, 8, 10, 12, 14)
y = c(170684,
35369,
13272,
5265,
2838)
plot(x, y)
# simulate the tree
num_tips = 250
tree = ladderize(tess.sim.taxa(1, num_tips, 10, 1, 0.5)[[1]])
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("lme4")
setwd("Desktop/ASSIM/")
setwd("lab_hoehna/statedependentOU/")
library(ggridges)
library(ggplot2)
library(tidyverse)
cleanDf <- function(path, simID) {
messy_df <- read.csv(path, sep = "\t")
clean_df <- messy_df %>%
filter(Iteration >= 240) %>%
select(halfLife, stationaryVariance.1., theta.1., theta.2.) %>%
rename(stationaryVariance = stationaryVariance.1.,
theta_state0 = theta.1.,
theta_state1 = theta.2.) %>%
mutate(simulationID = simID) %>%
pivot_longer(cols = c("halfLife", "stationaryVariance", "theta_state0", "theta_state1"),
names_to = "parameter",
values_to = "value")
}
num_tips   = c(100, 250, 500)
tree_reps   = 1
num_dtraits = 4
num_ctraits = 5
grid = expand.grid(num_tips=num_tips, tree=1:tree_reps,
ctraits=1:num_ctraits, dtraits = 1:num_dtraits,
stringsAsFactors=FALSE)
this_dir = "output/"
looongPosteriorDf <- data.frame()
for(i in 1:nrow(grid)) {
this_row = grid[i,]
this_num_tips   = this_row[[1]]
this_tree       = this_row[[2]]
this_num_ctraits = this_row[[3]]
this_num_dtraits = this_row[[4]]
this_simID = paste0("n", this_num_tips,
"t", this_tree,
"d", this_num_dtraits,
"c", this_num_ctraits)
this_path = paste0(this_dir, "sdOU_simulation_", this_simID, ".log")
clean_df <- cleanDf(this_path, this_simID)
looongPosteriorDf <- looongPosteriorDf %>%
bind_rows(clean_df)
}
looongPosteriorDf %>%
filter(parameter == "halfLife") %>%
group_by(simulationID) %>%
ggplot(aes(x = value, y = simulationID, fill = simulationID, alpha = 0.5)) +
geom_density_ridges() +
xlim(0, 2) +
theme_ridges() +
theme(legend.position = "none")
looongPosteriorDf %>%
filter(parameter == "theta_state1") %>%
group_by(simulationID) %>%
ggplot(aes(x = value, y = simulationID, fill = simulationID, alpha = 0.5)) +
geom_density_ridges() +
xlim(0, 5) +
theme_ridges() +
theme(legend.position = "none")
looongPosteriorDf %>%
filter(parameter == "stationaryVariance") %>%
group_by(simulationID) %>%
ggplot(aes(x = value, y = simulationID, fill = simulationID, alpha = 0.5)) +
geom_density_ridges() +
xlim(0, 0.25) +
theme_ridges() +
theme(legend.position = "none")
looongPosteriorDf %>%
filter(parameter == "theta_state0") %>%
group_by(simulationID) %>%
ggplot(aes(x = value, y = simulationID, fill = simulationID, alpha = 0.5)) +
geom_density_ridges() +
xlim(-0.1, 1.5) +
theme_ridges() +
theme(legend.position = "none")
