axis.title.y=element_blank(),
plot.title = element_text(hjust = 0.5)) +
ggtitle("sigma2")
cuteRidgePlot_theta <- looongPosteriorDf %>%
filter(parameter %in% c("theta_state0", "theta_state1")) %>%
group_by(trait) %>%
ggplot(aes(x = value, y = trait, fill = parameter, alpha = 0.7)) +
geom_density_ridges() +
xlim(-0.4, 80) +
theme_ridges() +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.title.y=element_blank(),
plot.title = element_text(hjust = 0.5)) +
ggtitle("theta")
cuteRidgePlot_alpha
cuteRidgePlot_halfLife
cuteRidgePlot_halfLife <- looongPosteriorDf %>%
filter(parameter %in% c("halfLife.1.", "halfLife.2.")) %>%
group_by(trait) %>%
ggplot(aes(x = value, y = trait, fill = parameter, alpha = 0.7)) +
geom_density_ridges() +
xlim(0, 3) +
theme_ridges() +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.title.y=element_blank(),
plot.title = element_text(hjust = 0.5)) +
ggtitle("half life")
cuteRidgePlot_alpha <- looongPosteriorDf %>%
filter(parameter %in% c("alpha.1.", "alpha.2.")) %>%
group_by(trait) %>%
ggplot(aes(x = value, y = trait, fill = parameter, alpha = 0.7)) +
geom_density_ridges() +
xlim(0, 3) +
theme_ridges() +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.title.y=element_blank(),
plot.title = element_text(hjust = 0.5)) +
ggtitle("alpha")
cuteRidgePlot_stV <- looongPosteriorDf %>%
filter(parameter %in% c("stationaryVariance.1.", "stationaryVariance.2.")) %>%
group_by(trait) %>%
ggplot(aes(x = value, y = trait, fill = parameter, alpha = 0.7)) +
geom_density_ridges() +
xlim(0, 3) +
theme_ridges() +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.title.y=element_blank(),
plot.title = element_text(hjust = 0.5)) +
ggtitle("stationary variance")
cuteRidgePlot_sigma2 <- looongPosteriorDf %>%
filter(parameter %in% c("sigma2.1.", "sigma2.2.")) %>%
group_by(trait) %>%
ggplot(aes(x = value, y = trait, fill = parameter, alpha = 0.7)) +
geom_density_ridges() +
xlim(0, 3) +
theme_ridges() +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.title.y=element_blank(),
plot.title = element_text(hjust = 0.5)) +
ggtitle("sigma2")
cuteRidgePlot_theta <- looongPosteriorDf %>%
filter(parameter %in% c("theta_state0", "theta_state1")) %>%
group_by(trait) %>%
ggplot(aes(x = value, y = trait, fill = parameter, alpha = 0.7)) +
geom_density_ridges() +
xlim(-0.4, 80) +
theme_ridges() +
theme(legend.position = "none",
axis.title.x=element_blank(),
axis.title.y=element_blank(),
plot.title = element_text(hjust = 0.5)) +
ggtitle("theta")
cuteRidgePlot_halfLife
library(RevGadgets)
for(i in c(1,2,5,6,7,9,10,11,12)) {
this_path = paste0("output/4_empirical_haemulidae_", i, ".log")
trace_quant[[j]] <- readTrace(path = this_path, burnin = 1/7)
names(trace_quant[[j]]) <- cont_trait_labels$trait[which(cont_trait_labels$index == i)]
j = j+1
}
#looongPosteriorDf <- data.frame()
j=1
trace_quant <- NA
for(i in c(1,2,5,6,7,9,10,11,12)) {
this_path = paste0("output/4_empirical_haemulidae_", i, ".log")
trace_quant[[j]] <- readTrace(path = this_path, burnin = 1/7)
names(trace_quant[[j]]) <- cont_trait_labels$trait[which(cont_trait_labels$index == i)]
j = j+1
}
View(trace_quant)
trace_quant <- NA
i=1
this_path = paste0("output/4_empirical_haemulidae_", i, ".log")
trace_quant <- readTrace(path = this_path, burnin = 1/7)
View(trace_quant)
trace_quant <- NA
trace_quant <- readTrace(path = this_path, burnin = 1/7)[[1]]
#looongPosteriorDf <- data.frame()
j=1
trace_quant <- NA
for(i in c(1,2,5,6,7,9,10,11,12)) {
this_path = paste0("output/4_empirical_haemulidae_", i, ".log")
trace_quant[[j]] <- readTrace(path = this_path, burnin = 1/7)[[1]]
names(trace_quant[[j]]) <- cont_trait_labels$trait[which(cont_trait_labels$index == i)]
j = j+1
}
for(i in c(1,2,5,6,7,9,10,11,12)) {
this_path = paste0("output/4_empirical_haemulidae_", i, ".log")
trace_quant[j] <- readTrace(path = this_path, burnin = 1/7)[[1]]
names(trace_quant[[j]]) <- cont_trait_labels$trait[which(cont_trait_labels$index == i)]
j = j+1
}
View(trace_quant)
#looongPosteriorDf <- data.frame()
j=1
trace_quant <- NA
for(i in c(1,2,5,6,7,9,10,11,12)) {
this_path = paste0("output/4_empirical_haemulidae_", i, ".log")
trace_quant[j] <- readTrace(path = this_path, burnin = 1/7)[[1]]
names(trace_quant[j]) <- cont_trait_labels$trait[which(cont_trait_labels$index == i)]
j = j+1
}
View(trace_quant)
#looongPosteriorDf <- data.frame()
j=1
trace_quant <- NA
for(i in c(1,2,5,6,7,9,10,11,12)) {
this_path = paste0("output/4_empirical_haemulidae_", i, ".log")
trace_quant[j] <- readTrace(path = this_path, burnin = 1/7)[[1]]
j = j+1
}
View(trace_quant)
#looongPosteriorDf <- data.frame()
j=1
trace_quant <- NA
for(i in c(1,2,5,6,7,9,10,11,12)) {
this_path = paste0("output/4_empirical_haemulidae_", i, ".log")
trace_quant[[j]] <- readTrace(path = this_path, burnin = 1/7)[[1]]
j = j+1
}
readTrace(path = this_path, burnin = 1/7)[[1]]
class(readTrace(path = this_path, burnin = 1/7)[[1]])
list(paste0("output/4_empirical_haemulidae_", 1, ".log"),
paste0("output/4_empirical_haemulidae_", 2, ".log"),
paste0("output/4_empirical_haemulidae_", 5, ".log"),
paste0("output/4_empirical_haemulidae_", 6, ".log"),
paste0("output/4_empirical_haemulidae_", 7, ".log"),
paste0("output/4_empirical_haemulidae_", 9, ".log"),
paste0("output/4_empirical_haemulidae_", 10, ".log"),
paste0("output/4_empirical_haemulidae_", 11, ".log"),
paste0("output/4_empirical_haemulidae_", 12, ".log"))
paths <- c(paste0("output/4_empirical_haemulidae_", 1, ".log"),
paste0("output/4_empirical_haemulidae_", 2, ".log"),
paste0("output/4_empirical_haemulidae_", 5, ".log"),
paste0("output/4_empirical_haemulidae_", 6, ".log"),
paste0("output/4_empirical_haemulidae_", 7, ".log"),
paste0("output/4_empirical_haemulidae_", 9, ".log"),
paste0("output/4_empirical_haemulidae_", 10, ".log"),
paste0("output/4_empirical_haemulidae_", 11, ".log"),
paste0("output/4_empirical_haemulidae_", 12, ".log"))
these_paths <- c(paste0("output/4_empirical_haemulidae_", 1, ".log"),
paste0("output/4_empirical_haemulidae_", 2, ".log"),
paste0("output/4_empirical_haemulidae_", 5, ".log"),
paste0("output/4_empirical_haemulidae_", 6, ".log"),
paste0("output/4_empirical_haemulidae_", 7, ".log"),
paste0("output/4_empirical_haemulidae_", 9, ".log"),
paste0("output/4_empirical_haemulidae_", 10, ".log"),
paste0("output/4_empirical_haemulidae_", 11, ".log"),
paste0("output/4_empirical_haemulidae_", 12, ".log"))
trace_quant <- readTrace(path = these_paths, burnin = 1/7)[[1]]
View(trace_quant)
trace_quant <- readTrace(path = these_paths, burnin = 1/7)
log_halfLife <- plotTrace(trace = trace_quant,
vars = c("halfLife[1]","halfLife[2]"))[[1]]
halfLife <- plotTrace(trace = trace_quant,
vars = c("halfLife[1]","halfLife[2]"),
color = c("halfLife[1]" = '#EE7733', "halfLife[2]" = '#0077BB'))[[1]]
halfLife
halfLife <- plotTrace(trace = trace_quant,
vars = c("halfLife[1]","halfLife[2]"),
color = c("halfLife[1]" = "#EE7733",
"halfLife[2]" = "#0077BB"))[[1]]
halfLife <- plotTrace(trace = trace_quant,
vars = c("halfLife[1]","halfLife[2]"),
color = c("halfLife[1]" = "#EE7733",
"halfLife[2]" = "#0077BB"))[[1]] +
ggtitle("Half life")
halfLife
halfLife <- plotTrace(trace = trace_quant,
vars = c("halfLife[1]","halfLife[2]"),
color = c("halfLife[1]" = "#EE7733",
"halfLife[2]" = "#0077BB"))[[1]] +
ggtitle("Half life")
alpha <- plotTrace(trace = trace_quant,
vars = c("alpha[1]","alpha[2]"),
color = c("alpha[1]" = "#EE7733",
"alpha[2]" = "#0077BB"))[[1]] +
ggtitle("Alpha")
stV <- plotTrace(trace = trace_quant,
vars = c("stationaryVariance[1]","stationaryVariance[2]"),
color = c("stationaryVariance[1]" = "#EE7733",
"stationaryVariance[2]" = "#0077BB"))[[1]] +
ggtitle("Stationary Variance")
sigma2 <- plotTrace(trace = trace_quant,
vars = c("sigma2[1]","sigma2[2]"),
color = c("sigma2[1]" = "#EE7733",
"sigma2[2]" = "#0077BB"))[[1]] +
ggtitle("sigma2")
theta <- plotTrace(trace = trace_quant,
vars = c("theta[1]","theta[2]"),
color = c("theta[1]" = "#EE7733",
"theta[2]" = "#0077BB"))[[1]] +
ggtitle("theta")
nested <- (cuteRidgePlot_sigma2|cuteRidgePlot_halfLife|cuteRidgePlot_theta)+
plot_annotation(tag_levels = 'A') #add figure labels
nested <- ((halfLife|alpha)/(stV|sigma2)/theta)
nested
halfLife <- plotTrace(trace = trace_quant,
vars = c("halfLife[1]","halfLife[2]"),
color = c("halfLife[1]" = "#EE7733",
"halfLife[2]" = "#0077BB")) +
ggtitle("Half life")
sigma2 <- plotTrace(trace = trace_quant,
vars = c("sigma2[1]","sigma2[2]"),
color = c("sigma2[1]" = "#EE7733",
"sigma2[2]" = "#0077BB")) +
ggtitle("sigma2")
sigma2 <- plotTrace(trace = trace_quant,
vars = c("sigma2[1]","sigma2[2]"),
color = c("sigma2[1]" = "#EE7733",
"sigma2[2]" = "#0077BB")) +
ggtitle("sigma2")
alpha <- plotTrace(trace = trace_quant,
vars = c("alpha[1]","alpha[2]"),
color = c("alpha[1]" = "#EE7733",
"alpha[2]" = "#0077BB")) +
ggtitle("Alpha")
alpha <- plotTrace(trace = trace_quant,
vars = c("alpha[1]","alpha[2]")) +
ggtitle("Alpha")
theta
theta <- plotTrace(trace = trace_quant,
vars = c("theta[1]","theta[2]"),
color = c("theta[1]" = "#EE7733",
"theta[2]" = "#0077BB"))[[1:9]] +
ggtitle("theta")
theta <- plotTrace(trace = trace_quant[[1]],
vars = c("theta[1]","theta[2]"),
color = c("theta[1]" = "#EE7733",
"theta[2]" = "#0077BB"))[[1]] +
ggtitle("theta")
theta <- plotTrace(trace = trace_quant[1],
vars = c("theta[1]","theta[2]"),
color = c("theta[1]" = "#EE7733",
"theta[2]" = "#0077BB"))[[1]] +
ggtitle("theta")
theta <- plotTrace(trace = trace_quant[1:9],
vars = c("theta[1]","theta[2]"),
color = c("theta[1]" = "#EE7733",
"theta[2]" = "#0077BB"))[[1]] +
ggtitle("theta")
theta
theta <- plotTrace(trace = trace_quant,
vars = c("theta[1]","theta[2]"),
color = c("theta[1]" = "#EE7733",
"theta[2]" = "#0077BB"))[[1]] +
ggtitle("theta")
theta
theta <- plotTrace(trace = trace_quant,
vars = c("theta[1]","theta[2]"),
color = c("theta[1]" = "#EE7733",
"theta[2]" = "#0077BB"))[[2]] +
ggtitle("theta")
theta
theta <- plotTrace(trace = trace_quant,
vars = c("theta[1]","theta[2]"),
color = c("theta[1]" = "#EE7733",
"theta[2]" = "#0077BB"))[[1:9]] +
ggtitle("theta")
theta <- plotTrace(trace = trace_quant,
vars = c("theta[1]","theta[2]"),
color = c("theta[1]" = "#EE7733",
"theta[2]" = "#0077BB")) +
ggtitle("theta")
library(grid)
halfLife[[1]] <- plotTrace(trace = trace_quant,
vars = c("halfLife[1]","halfLife[2]"),
color = c("halfLife[1]" = "#EE7733",
"halfLife[2]" = "#0077BB"))[[1]] +
ggtitle("Half life")
cont_trait_labels <- c("body size",
"adductor mass",
"ascending process",
"raker length",
"eye width",
"buccal length",
"buccal width",
"head height",
"head length"))
cont_trait_labels <- c("body size",
"adductor mass",
"ascending process",
"raker length",
"eye width",
"buccal length",
"buccal width",
"head height",
"head length")
i=1
title <- cont_trait_labels[i]
halfLife[[i]] <- plotTrace(trace = trace_quant,
vars = c("halfLife[1]","halfLife[2]"),
color = c("halfLife[1]" = "#EE7733",
"halfLife[2]" = "#0077BB"))[[i]] +
ggtitle(title)
for (i in range(1, 9)) {
title <- cont_trait_labels[i]
halfLife[[i]] <- plotTrace(trace = trace_quant,
vars = c("halfLife[1]","halfLife[2]"),
color = c("halfLife[1]" = "#EE7733",
"halfLife[2]" = "#0077BB"))[[i]] +
ggtitle(title)
}
View(halfLife)
halfLife <- NA
for (i in range(1, 9)) {
title <- cont_trait_labels[i]
halfLife[i] <- plotTrace(trace = trace_quant,
vars = c("halfLife[1]","halfLife[2]"),
color = c("halfLife[1]" = "#EE7733",
"halfLife[2]" = "#0077BB"))[[i]] +
ggtitle(title)
}
View(halfLife)
halfLife <- NA
for (i in range(1, 9)) {
title <- cont_trait_labels[i]
halfLife[[i]] <- plotTrace(trace = trace_quant,
vars = c("halfLife[1]","halfLife[2]"),
color = c("halfLife[1]" = "#EE7733",
"halfLife[2]" = "#0077BB"))[[i]] +
ggtitle(title)
}
halfLife[1]
halfLife[[1]]
cont_trait_labels <- c("body size",
"adductor mass",
"ascending process",
"raker length",
"eye width",
"buccal length",
"buccal width",
"head height",
"head length")
these_paths <- c(paste0("output/4_empirical_haemulidae_", 1, ".log"),
paste0("output/4_empirical_haemulidae_", 2, ".log"),
paste0("output/4_empirical_haemulidae_", 5, ".log"),
paste0("output/4_empirical_haemulidae_", 6, ".log"),
paste0("output/4_empirical_haemulidae_", 7, ".log"),
paste0("output/4_empirical_haemulidae_", 9, ".log"),
paste0("output/4_empirical_haemulidae_", 10, ".log"),
paste0("output/4_empirical_haemulidae_", 11, ".log"),
paste0("output/4_empirical_haemulidae_", 12, ".log"))
trace_quant <- readTrace(path = these_paths, burnin = 1/7)
range(1, 9)
range(1:9)
for (i in 1:9) {
title <- cont_trait_labels[i]
halfLife[[i]] <- plotTrace(trace = trace_quant,
vars = c("halfLife[1]","halfLife[2]"),
color = c("halfLife[1]" = "#EE7733",
"halfLife[2]" = "#0077BB"))[[i]] +
ggtitle(title)
}
halfLife <- list()
for (i in 1:9) {
title <- cont_trait_labels[i]
halfLife[[i]] <- plotTrace(trace = trace_quant,
vars = c("halfLife[1]","halfLife[2]"),
color = c("halfLife[1]" = "#EE7733",
"halfLife[2]" = "#0077BB"))[[i]] +
ggtitle(title)
}
ggplotGrob(halfLife[[1]]),
grid.newpage()
grid.draw( # draw the following matrix of plots
grid.newpage()
grid.draw(
grid.newpage()
grid.draw(
rbind(
ggplotGrob(halfLife[[1]]),
ggplotGrob(halfLife[[2]]),
ggplotGrob(halfLife[[3]]),
ggplotGrob(halfLife[[4]]),
ggplotGrob(halfLife[[5]]),
ggplotGrob(halfLife[[6]]),
ggplotGrob(halfLife[[7]]),
ggplotGrob(halfLife[[8]]),
ggplotGrob(halfLife[[9]])
)
)
grid.newpage()
grid.draw(
rbind(
ggplotGrob(halfLife[[1]]),
ggplotGrob(halfLife[[2]]),
ggplotGrob(halfLife[[3]])
)
)
grid.newpage()
grid.draw(
rbind(
ggplotGrob(halfLife[[1]]),
ggplotGrob(halfLife[[2]]),
ggplotGrob(halfLife[[3]]),
ggplotGrob(halfLife[[4]]),
ggplotGrob(halfLife[[5]]),
ggplotGrob(halfLife[[6]]),
ggplotGrob(halfLife[[7]]),
ggplotGrob(halfLife[[8]]),
ggplotGrob(halfLife[[9]])
)
) -> ggsave("figures/haemulidae_halfLife.pdf", width = 400, height = 1600, units = "mm")
grid.newpage()
halfLifePlot <- grid.draw(
rbind(
ggplotGrob(halfLife[[1]]),
ggplotGrob(halfLife[[2]]),
ggplotGrob(halfLife[[3]]),
ggplotGrob(halfLife[[4]]),
ggplotGrob(halfLife[[5]]),
ggplotGrob(halfLife[[6]]),
ggplotGrob(halfLife[[7]]),
ggplotGrob(halfLife[[8]]),
ggplotGrob(halfLife[[9]])
)
)
ggsave("figures/haemulidae_halfLife.pdf", halfLifePlot, width = 400, height = 1600, units = "mm")
ggsave("figures/haemulidae_halfLife.pdf", halfLifePlot, width = 400, height = 800, units = "mm")
halfLifePlot
halfLifePlot <- grid.draw(
rbind(
ggplotGrob(halfLife[[1]]),
ggplotGrob(halfLife[[2]]),
ggplotGrob(halfLife[[3]]),
ggplotGrob(halfLife[[4]]),
ggplotGrob(halfLife[[5]]),
ggplotGrob(halfLife[[6]]),
ggplotGrob(halfLife[[7]]),
ggplotGrob(halfLife[[8]]),
ggplotGrob(halfLife[[9]])
)
)
halfLifePlot
ggsave("figures/haemulidae_halfLife.pdf", halfLifePlot, width = 400, height = 800, units = "mm")
pdf("figures/haemulidae_halfLife.pdf", height = 11, width = 8.5, paper = "letter")
grid.newpage()
grid.draw(
rbind(
ggplotGrob(halfLife[[1]]),
ggplotGrob(halfLife[[2]]),
ggplotGrob(halfLife[[3]]),
ggplotGrob(halfLife[[4]]),
ggplotGrob(halfLife[[5]]),
ggplotGrob(halfLife[[6]]),
ggplotGrob(halfLife[[7]]),
ggplotGrob(halfLife[[8]]),
ggplotGrob(halfLife[[9]])
)
)
dev.off()
?def
library(ape)
library(phytools)
read.nexus("data/1_validation/dummy_threetaxon_simmap.tre")
read.tree("data/1_validation/dummy_threetaxon_simmap.tre")
dummy_tree <- read.tree("data/1_validation/dummy_threetaxon_simmap.tre")
View(dummy_tree)
dummy_tree <- read.simmap("data/1_validation/dummy_threetaxon_simmap.tre")
dummy_tree <- read.simmap("data/1_validation/dummy_threetaxon_simmap.tre", format="nexus", rev.order=TRUE)
dummy_tree <- read.tree("data/2_simulation_sameRate_diffTree/n100/t1/tree.tre")
View(dummy_tree)
dummy_tree <- read.tree("data/2_simulation_sameRate_diffTree/n100/t1/d1/n100t1d1_History.Rda")
dummy_tree <- load("data/2_simulation_sameRate_diffTree/n100/t1/d1/n100t1d1_History.Rda")
preorder <- rev(postorder(dummy_tree))
dummy_tree <- load("data/2_simulation_sameRate_diffTree/n100/t1/d1/n100t1d1_History.Rda")
preorder <- rev(postorder(dummy_tree))
load("data/2_simulation_sameRate_diffTree/n100/t1/d1/n100t1d1_History.Rda")
preorder <- rev(postorder(history))
postorder <- postorder(history)
load("data/2_simulation_sameRate_diffTree/n100/t1/d1/n100t1d1_History.Rda")
postorder <- postorder(history)
continuous_trait <- read.nexus.data("data/2_simulation_sameRate_diffTree/n100/t1/d1/n100t1d1c1_Continuous.nex")
View(history)
history$tip.label
sort(history$tip.label)
?sort
history$tip.label
postorder[1]
sub_edges <- tree$maps[[197]]
sub_edges <- history$maps[[197]]
parent_node <- edges[197, 1]
edges <- history$edge
parent_node <- edges[197, 1]
?postorde
?postorder
