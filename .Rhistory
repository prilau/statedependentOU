setwd("../..")
library(ape)
library(tidyverse)
# read in trait data
# remove rows without the continuous trait of interest
# change formatting of species name according to tree tip labels
df <- read.csv("data/3_empirical/raw/COMBINE_imputed_Soria_2021.csv") %>%
filter(!is.na(adult_mass_g),
!duplicated(phylacine_binomial)) %>%
mutate(binomial_name = tolower(gsub(" ", "_", phylacine_binomial)),
log_body_mass = log(adult_mass_g / 1000))
# plot distribution
ggplot(data=df, aes(x=log_body_mass)) +
geom_histogram()
# code three binary characters
# herbivore defined as consuming 100% plant materials
# carnivore defined as consuming 100% invertebrate and/or vertebrate materials
# picky eater defined as consuming only one type of material
# aquatic defined as living in freshwater or marine habitat
df_hpa <- df %>%
filter(!is.na(dphy_plant),
!is.na(dphy_invertebrate),
!is.na(dphy_vertebrate),
!is.na(det_fruit)) %>%
mutate(picky = ifelse(det_fruit >=90 | det_inv >=90 | det_vend>=90 | det_vect>=90 | det_vfish >=90 | det_vunk >=90 | det_scav >=90 | det_nect >=90 | det_seed >=90 | det_plantother >=90, 1, 0),
herbivore = ifelse(dphy_plant == 100, 1, 0),
carnivore = ifelse(dphy_invertebrate + dphy_vertebrate == 100, 1, 0),
picky_herb = picky * 1 + herbivore * 2,
picky_carn = picky * 1 + carnivore * 2)
# read in tree
tree <- read.nexus("data/3_empirical/raw/4705sp_mammal-time_Álvarez-Carretero_2022.tree")
# check root age
max(node.depth.edgelength(tree))
# transform unit to million years
tree$edge.length <- tree$edge.length * 100
# species names found in both trait data and tree
tips_keep <- intersect(tree$tip.label, df_hpa$binomial_name)
# remove species not found in trait data
tree <- keep.tip(tree, tips_keep)
# remove species not found in tree
df_hpa <- df_hpa %>% filter(binomial_name %in% tips_keep)
write.csv(df_hpa, "data/3_empirical/mammal_Discrete.csv")
View(df_hpa)
# code three binary characters
# herbivore defined as consuming 100% plant materials
# carnivore defined as consuming 100% invertebrate and/or vertebrate materials
# picky eater defined as consuming only one type of material
# aquatic defined as living in freshwater or marine habitat
df_hpa <- df %>%
filter(!is.na(dphy_plant),
!is.na(dphy_invertebrate),
!is.na(dphy_vertebrate),
!is.na(det_fruit)) %>%
mutate(picky = ifelse(det_fruit >=90 | det_inv >=90 | det_vend>=90 | det_vect>=90 | det_vfish >=90 | det_vunk >=90 | det_scav >=90 | det_nect >=90 | det_seed >=90 | det_plantother >=90, 1, 0),
herbivore = ifelse(dphy_plant == 100, 1, 0),
carnivore = ifelse(dphy_invertebrate + dphy_vertebrate == 100, 1, 0),
picky_herb = picky * 1 + herbivore * 2,
picky_carn = picky * 1 + carnivore * 2,
omnivore = ifelse(herbivore == 1 | carnivore == 1, 0, 1),)
mammal_disc_tristate <- list()
mammal_disc_tristate <- list()
for (i in 1:nrow(df_hpa)){
sp <- df_hpa$binomial_name[i]
mammal_disc_tristate[[sp]] = df_hpa$herbivore[i] * 1 + df_hpa$omnivore[i] * 2 + df_hpa$carnivore[i] * 3 - 1
}
mammal_disc_tristate
which(df$binomial_name=="dendrogale_murina")
df_hpa[which(df$binomial_name=="dendrogale_murina")]
df_hpa[which(df$binomial_name=="dendrogale_murina"),]
df_hpa$dphy_invertebrate[which(df$binomial_name=="dendrogale_murina"),]
df_hpa$dphy_invertebrate[which(df$binomial_name=="dendrogale_murina")]
df_hpa$dphy_vertebrate[which(df$binomial_name=="dendrogale_murina")]
df_hpa$dphy_plant[which(df$binomial_name=="dendrogale_murina")]
write.nexus.data(mammal_disc_tristate, "data/3_empirical/mammal_diet_tristate_Discrete.nex", format = "standard")
nrow(df_hpa)
# remove species not found in tree
df_hpa <- df_hpa %>% filter(binomial_name %in% tips_keep)
mammal_disc_tristate <- list()
for (i in 1:nrow(df_hpa)){
sp <- df_hpa$binomial_name[i]
mammal_disc_tristate[[sp]] = df_hpa$herbivore[i] * 1 + df_hpa$omnivore[i] * 2 + df_hpa$carnivore[i] * 3 - 1
}
write.nexus.data(mammal_disc_tristate, "data/3_empirical/mammal_diet_tristate_Discrete.nex", format = "standard")
#############
# triState  #
#############
tip_states <- list()
tip_states[["Carnivore"]] = df_hpa %>% filter(carnivore == 1) %>% select(binomial_name) %>% unlist() %>% unname()
tip_states[["Herbivore"]] = df_hpa %>% filter(hernivore == 0) %>% select(binomial_name) %>% unlist() %>% unname()
tip_states[["Omnivore"]] = df_hpa %>% filter(omnivore == 0) %>% select(binomial_name) %>% unlist() %>% unname()
tip_states[["Carnivore"]] = df_hpa %>% filter(carnivore == 1) %>% select(binomial_name) %>% unlist() %>% unname()
tip_states[["Herbivore"]] = df_hpa %>% filter(herbivore == 0) %>% select(binomial_name) %>% unlist() %>% unname()
tip_states[["Omnivore"]] = df_hpa %>% filter(omnivore == 0) %>% select(binomial_name) %>% unlist() %>% unname()
t <- tidytree::groupOTU(tree, tip_states)
colors <- c("Herbivore"="#44AA99", "Omnivore" = "#DDCC77", "Carnivore"="#663333")
p1 <- ggtree(t, layout = "circular", color = "#848884", linewidth = 0.1) +
ggtree::geom_tippoint(ggplot2::aes(colour = group), size = 0.1, shape = 1, alpha = 0.4) +
#geom_tiplab(aes(color=group), size = 0.4, offset = 0.5) +
scale_color_manual(values=colors) +
theme(legend.position = "none")
colors <- c("Herbivore"="#44AA99", "Omnivore" = "#DDCC77", "Carnivore"="#663333")
library(cowplot)
library(ggplot2)
library(ggtree)
library(gridExtra)
library(phytools)
library(readr)
library(RevGadgets)
library(tidyverse)
source("scripts/4_plots/revgadgets_StochMap.R")
t <- tidytree::groupOTU(tree, tip_states)
colors <- c("Herbivore"="#44AA99", "Omnivore" = "#DDCC77", "Carnivore"="#663333")
p1 <- ggtree(t, layout = "circular", color = "#848884", linewidth = 0.1) +
ggtree::geom_tippoint(ggplot2::aes(colour = group), size = 0.1, shape = 1, alpha = 0.4) +
#geom_tiplab(aes(color=group), size = 0.4, offset = 0.5) +
scale_color_manual(values=colors) +
theme(legend.position = "none")
#guides(color = guide_legend(
#  override.aes=list(size = 4, shape = 20, alpha = 0.8)))
ggsave(paste0("figures/3_empirical/ase_triState/tip_states.pdf"), p1, width = 8, height = 6)
ase <- processAncStates("output/3_empirical/ase_triState/anc_states.tre",
# Specify state labels.
# These numbers correspond to
# your input data file.
state_labels=c("0"="Herbivore", "1"="Omnivore", "2"="Carnivore"))
ase <- processAncStates("output/3_empirical/ase_triState/anc_states.tre",
# Specify state labels.
# These numbers correspond to
# your input data file.
state_labels=c("0"="Herbivore", "1"="Omnivore", "2"="Carnivore"))
# produce the plot object, showing MAP states at nodes.
# color corresponds to state, size to the state's posterior probability
p2 <- plotAncStatesMAP(t = ase,
#tip_labels_offset = 0.5,
node_color = c("Herbivore"="#44AA99", "Omnivore" = "#DDCC77", "Carnivore"="#663333"),
tip_labels = FALSE,
tip_states = TRUE,
node_color_as = "state",
node_size = c(0.05, 1.2),
#tip_states_size = c(0.01, 0.01),
#tip_states_shape = 1,
state_transparency = 0.6,
tree_layout = "circular",
#tip_labels_size = 0.5
tree_color = "#848884",
tree_linewidth = 0.1) +
# modify legend location using ggplot2
guides(color = "none")
ggsave(paste0("figures/3_empirical/ase_triState/ase_map.pdf"), p2, width = 16, height = 9)
# stochastic mapping
simmaps <- list()
simmaps[[1]] <- read.simmap("output/3_empirical/ase_triState/marginal_character.tree", format="phylip")
stoc_map <- processStochMaps(tree,
simmap = simmaps,
states=c("0", "1", "2"))
#Plotting
tree <- readTrees("data/3_empirical/mammal_perMY_n2955.tre")
stoc_map <- processStochMaps(tree,
simmap = simmaps,
states=c("0", "1", "2"))
colnames(stoc_map)[6] = "Herbivore"
colnames(stoc_map)[7]
colnames(stoc_map)[7] = "Omnivore"
colnames(stoc_map)[8] = "Carnivore"
p4 <- plotStochMaps(tree, maps=stoc_map,
tip_labels = FALSE,
tree_layout = "circular",
line_width=0.1,
color_by = "MAP",
colors = c("Herbivore"="#44AA99", "Omnivore" = "#DDCC77", "Carnivore"="#663333")) +
guides(color = "none")
ggsave(paste0("figures/3_empirical/ase_triState/stoch_map.pdf"), p4, width = 8, height = 6)
p3 <- plotAncStatesPie(t = ase,
pie_colors = c("Herbivore"="#44AA99", "Omnivore" = "#DDCC77", "Carnivore"="#663333"),
#tip_labels_size = 1,
tip_pies = TRUE,
#tip_labels_offset = 0.5,
node_pie_size = 0.4,
tip_pie_size = 0.2,
tree_layout = "circular",
tip_labels = FALSE,
state_transparency = 0.6,
tree_color = "#848884",
tree_linewidth = 0.1)
ggsave(paste0("figures/3_empirical/ase_triState/ase_pie.pdf"), p3, width = 8, height = 6)
tip_states <- list()
tip_states[["Carnivore"]] = df_hpa %>% filter(carnivore == 1) %>% select(binomial_name) %>% unlist() %>% unname()
tip_states[["Herbivore"]] = df_hpa %>% filter(herbivore == 1) %>% select(binomial_name) %>% unlist() %>% unname()
tip_states[["Omnivore"]] = df_hpa %>% filter(omnivore == 1) %>% select(binomial_name) %>% unlist() %>% unname()
t <- tidytree::groupOTU(tree, tip_states)
tree <- read.tree("data/3_empirical/mammal_perMY_n2955.tre")
tip_states <- list()
tip_states[["Carnivore"]] = df_hpa %>% filter(carnivore == 1) %>% select(binomial_name) %>% unlist() %>% unname()
tip_states[["Herbivore"]] = df_hpa %>% filter(herbivore == 1) %>% select(binomial_name) %>% unlist() %>% unname()
tip_states[["Omnivore"]] = df_hpa %>% filter(omnivore == 1) %>% select(binomial_name) %>% unlist() %>% unname()
t <- tidytree::groupOTU(tree, tip_states)
colors <- c("Herbivore"="#44AA99", "Omnivore" = "#DDCC77", "Carnivore"="#663333")
p1 <- ggtree(t, layout = "circular", color = "#848884", linewidth = 0.1) +
ggtree::geom_tippoint(ggplot2::aes(colour = group), size = 0.1, shape = 1, alpha = 0.4) +
#geom_tiplab(aes(color=group), size = 0.4, offset = 0.5) +
scale_color_manual(values=colors) +
theme(legend.position = "none")
#guides(color = guide_legend(
#  override.aes=list(size = 4, shape = 20, alpha = 0.8)))
ggsave(paste0("figures/3_empirical/ase_triState/tip_states.pdf"), p1, width = 8, height = 6)
