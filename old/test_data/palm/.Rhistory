"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"2, 3",
"Pt",
"Pt",
"Pt",
"Pt",
"2, 3",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"Pt",
"2, 3",
"2, 3",
"2, 3",
"2, 3"
)
write.csv(cb, "/Users/priscillalau/Desktop/data.csv", rownames=T)
write.csv(cb, "/Users/priscillalau/Desktop/data.csv", row.names=T)
k
sp_sorted <-
attach(mtcars)
# sort by mpg
newdata <- mtcars[order(mpg),]
newdata
View(newdata)
# sort by mpg and cyl
newdata <- mtcars[order(mpg, cyl),]
View(newdata)
# sort by mpg
newdata <- mtcars[order(mpg),]
# sort by mpg and cyl
newdata <- mtcars[order(mpg, cyl),]
#sort by mpg (ascending) and cyl (descending)
newdata <- mtcars[order(mpg, -cyl),]
View(newdata)
detach(mtcars)
?ggarrange
library(ggplot2)
library(cowplot)
library(tidyr)
library(dplyr)
library(knitr)
library(jpeg)
library(patchwork)
library(leaflet)
library(tidyverse)
library(readr)
library(broom)
library(car)
library(Hmisc)
library(ggimage)
library(png)
knitr::opts_chunk$set(echo=T,
eval=T,
message = F,
warning=F,
error = F,
cache = F,
tidy = T,
size="footnotesize",
fig.pos='H',
results='hide',
fig.lp='fig:',
fig.align = 'center',
fig.path='figures/example-',
cache.path = 'cache/example-',
tidy.opts=list(width.cutoff=60)
)
library(ggarrange)
???ggarrange
library(patchwork)
library(ggplot2)
library(cowplot)
library(tidyr)
library(dplyr)
library(knitr)
library(jpeg)
library(patchwork)
library(leaflet)
library(tidyverse)
library(readr)
library(broom)
library(car)
library(Hmisc)
library(ggimage)
library(png)
knitr::opts_chunk$set(echo=T,
eval=T,
message = F,
warning=F,
error = F,
cache = F,
tidy = T,
size="footnotesize",
fig.pos='H',
results='hide',
fig.lp='fig:',
fig.align = 'center',
fig.path='figures/example-',
cache.path = 'cache/example-',
tidy.opts=list(width.cutoff=60)
)
players <- read_csv("mlb-player-stats-Batters.csv")
hit <- read_csv("exit_velocity.csv")
comb <- hit %>% mutate(Player = paste0(first_name, " ", last_name)) %>%
inner_join(players, by = "Player")
colnames(comb)
trim <- comb[, -c(1:4, 7, 9:11, 13:18, 20, 22:23, 25, 30:33, 37, 39:41)] %>%
mutate(p_longhit = (`2B`+`3B`+HR)/H,
SF_1000 = 1000*SF/AB)
trim$pos_group <- ifelse(trim$Pos %in% c("1B", "2B", "3B", "SS"), "IF", trim$Pos)
trim <- trim %>%
select(-c(H, `2B`, `3B`, HR, SF, avg_distance)) %>%
select(4, 1:3, 5:12)
group.colors <- c(IF = "#a98467", OF = "#226f54", C ="#da2c38", DH = "#f4f0bb")
level_order <- c('C', '1B', '2B', '3B', 'SS', 'OF', 'DH')
pic <- readJPEG("baseball.jpg", native = T)
p1 <- trim %>%
group_by(pos_group) %>%
ggplot(aes(y = AVG,
x = factor(Pos, level = level_order),
fill = pos_group)) +
geom_boxplot() +
ylab("Batting average") +
xlab("Position") +
ggtitle("Batting average by position") +
scale_fill_manual(values=group.colors) +
theme(axis.text = element_text(size = 10),
legend.position = "none",
plot.title = element_text(hjust = 0.5)) +
inset_element(pic,
left = 0.8,
bottom = 0.6,
right = 1,
top = 1)
library(ggarrange)
mod.1c <- lm(AVG ~ avg_hit_angle + anglesweetspotpercent + avg_hit_speed, trim)
mod.1b <- lm(AVG ~ avg_hit_angle + anglesweetspotpercent , trim)
mod.1a <- lm(AVG ~ avg_hit_angle, trim)
anova(mod.1a, mod.1b, mod.1c)
mod.2c <- lm(AVG ~ avg_hit_speed + avg_hit_angle + anglesweetspotpercent, trim)
mod.2b <- lm(AVG ~ avg_hit_speed + avg_hit_angle , trim)
mod.2a <- lm(AVG ~ avg_hit_speed, trim)
anova(mod.2a, mod.2b, mod.2c)
mod.3c <- lm(AVG ~ anglesweetspotpercent + avg_hit_speed + avg_hit_angle, trim)
mod.3b <- lm(AVG ~ anglesweetspotpercent + avg_hit_speed , trim)
mod.3a <- lm(AVG ~ anglesweetspotpercent, trim)
anova(mod.3a, mod.3b, mod.3c)
mod <- lm(AVG ~ avg_hit_angle + anglesweetspotpercent,
data = trim )
mod <- lm(AVG ~ avg_hit_angle + anglesweetspotpercent,
data = trim )
#layout(matrix(1:4, 2, 2))
#par(mfrow=c(2,2))
pdf(file = "plot2.pdf", width = 8, height = 6)
plot(mod)
step(mod)
vif(mod)
attr <- sort(c("AVG", "avg_hit_angle", "anglesweetspotpercent", "avg_hit_speed", "SO", "p_longhit", "SF_1000", "AB"))
df <- trim[, attr] %>%
as.matrix() %>%
rcorr(type = "spearman") %>%
tidy()
dummy <- data.frame(column1 = attr,
column2 = attr,
estimate = NA,
p.value = NA)
df2 <- df %>%
dplyr::select(-n) %>%
bind_rows(dummy)
attr_labels <- c("Strikeout", "Sacrifice Fly", "% Long Hit", "Average Exit Velocity", "Average Hit Angle", "Batting Average", "% Sweet Spot", "At-bat")
p <- df2 %>%
ggplot(aes(x = column1,
y = column2)) +
geom_tile(aes(fill = estimate)) +
theme_minimal() +
geom_text(aes(label = round(estimate, digits = 2), family = "mono")) +
theme(axis.title = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 10,
colour = "#432818",
family = "mono"),
axis.text.x = element_text(angle = 40, hjust=1),
legend.position = "right",
legend.text = element_text(family = "mono"),
axis.ticks = element_blank()) +
scale_fill_gradient2(low = "#fd9e02",
mid = "white",
high = muted("#75b6c6"),
midpoint = 0,
space = "Lab",
na.value = "transparent",
guide = "colourbar",
aesthetics = "fill",
limits=c(-0.5, 0.5),
name = "") +
scale_x_discrete(labels = attr_labels) +
scale_y_discrete(labels = attr_labels)
library(scales)
mod.1c <- lm(AVG ~ avg_hit_angle + anglesweetspotpercent + avg_hit_speed, trim)
mod.1b <- lm(AVG ~ avg_hit_angle + anglesweetspotpercent , trim)
mod.1a <- lm(AVG ~ avg_hit_angle, trim)
anova(mod.1a, mod.1b, mod.1c)
mod.2c <- lm(AVG ~ avg_hit_speed + avg_hit_angle + anglesweetspotpercent, trim)
mod.2b <- lm(AVG ~ avg_hit_speed + avg_hit_angle , trim)
mod.2a <- lm(AVG ~ avg_hit_speed, trim)
anova(mod.2a, mod.2b, mod.2c)
mod.3c <- lm(AVG ~ anglesweetspotpercent + avg_hit_speed + avg_hit_angle, trim)
mod.3b <- lm(AVG ~ anglesweetspotpercent + avg_hit_speed , trim)
mod.3a <- lm(AVG ~ anglesweetspotpercent, trim)
anova(mod.3a, mod.3b, mod.3c)
mod <- lm(AVG ~ avg_hit_angle + anglesweetspotpercent,
data = trim )
mod <- lm(AVG ~ avg_hit_angle + anglesweetspotpercent,
data = trim )
#layout(matrix(1:4, 2, 2))
#par(mfrow=c(2,2))
pdf(file = "plot2.pdf", width = 8, height = 6)
plot(mod)
step(mod)
vif(mod)
attr <- sort(c("AVG", "avg_hit_angle", "anglesweetspotpercent", "avg_hit_speed", "SO", "p_longhit", "SF_1000", "AB"))
df <- trim[, attr] %>%
as.matrix() %>%
rcorr(type = "spearman") %>%
tidy()
dummy <- data.frame(column1 = attr,
column2 = attr,
estimate = NA,
p.value = NA)
df2 <- df %>%
dplyr::select(-n) %>%
bind_rows(dummy)
attr_labels <- c("Strikeout", "Sacrifice Fly", "% Long Hit", "Average Exit Velocity", "Average Hit Angle", "Batting Average", "% Sweet Spot", "At-bat")
p <- df2 %>%
ggplot(aes(x = column1,
y = column2)) +
geom_tile(aes(fill = estimate)) +
theme_minimal() +
geom_text(aes(label = round(estimate, digits = 2), family = "mono")) +
theme(axis.title = element_blank(),
panel.background = element_blank(),
axis.text = element_text(size = 10,
colour = "#432818",
family = "mono"),
axis.text.x = element_text(angle = 40, hjust=1),
legend.position = "right",
legend.text = element_text(family = "mono"),
axis.ticks = element_blank()) +
scale_fill_gradient2(low = "#fd9e02",
mid = "white",
high = muted("#75b6c6"),
midpoint = 0,
space = "Lab",
na.value = "transparent",
guide = "colourbar",
aesthetics = "fill",
limits=c(-0.5, 0.5),
name = "") +
scale_x_discrete(labels = attr_labels) +
scale_y_discrete(labels = attr_labels)
p
ggsave(filename = "plot2.pdf", device = "pdf",
width = 20, height = 12, units = "cm")
library(patchwork)
mlb <- ((p1/p)) + plot_annotation(tag_levels = "A") + plot_layout(nrow = 2)
ggsave("mlb2.pdf", mlb, device = "pdf")
mlb <- ((p1/p)) + plot_layout(nrow = 2)
ggsave("mlb2.pdf", mlb, device = "pdf")
setwd("./Desktop/ASSIM/lab_hoehna/test_data/palm/")
library(tidyverse)
library(ape)
palms <- read_table("PalmTraits_1.0.txt")
View(palms)
?read_table
palms <- read_table("PalmTraits_1.0.txt", sep= "\t")
palms <- read.table("PalmTraits_1.0.txt", sep= "\t")
View(palms)
palms <- read.table("PalmTraits_1.0.txt", sep= "\t", header = TRUE)
?read.table
View(palms)
palmTree <- read.nexus("TREE.nex")
palms <- palms %>%
palms <- palms %>%
mutate(Species = paste0(strsplit(SpecName)[[1]][1], "_", strsplit(SpecName)[[1]][2]))
palms <- palms %>%
mutate(Species = paste0(strsplit(SpecName)[[1]][1], "_", strsplit(SpecName)[[1]][2]))
palms <- palms %>%
mutate(Species = paste0(strsplit(SpecName, " ")[[1]][1], "_", strsplit(SpecName)[[1]][2]))
palms <- palms %>%
mutate(Species = paste0(strsplit(SpecName, split = " ")[[1]][1], "_", strsplit(SpecName)[[1]][2]))
?strsplit
?str_split
palms$SpecName[1]
strsplit(palms$SpecName[1], split = " ")
i=1
sp <- strsplit(palms$SpecName[i], split = " ")
paste0(sp[[1]][1], "_", sp[[1]][2])
View(palms)
for (i in 1:length(palms$SpecName)){
for (i in 1:length(palms$SpecName)){
sp <- strsplit(palms$SpecName[i], split = " ")
palms$SpecName[i] <- paste0(sp[[1]][1], "_", sp[[1]][2])
}
for (i in 1:length(palms$SpecName)){
sp <- strsplit(palms$SpecName[i], split = " ")
palms$SpecName[i] <- paste0(sp[[1]][1], "_", sp[[1]][2])
}
palmTree <- read.nexus("TREE.nex")
sagr
14
h;
5twery
length(palms$SpecName
)
for (i in 1:length(palms$SpecName)){
sp <- strsplit(palms$SpecName[i], split = " ")
palms$SpecName[i] <- paste0(sp[[1]][1], "_", sp[[1]][2])
}
palmsDisc <- palms %>%
select(1, 6:8)
palmCont <- palms %>%
select(1, 16, 19)
palmsDisc <- palms %>%
select(1, 6:8) %>%
drop_na()
palmCont <- palms %>%
select(1, 16, 19) %>%
drop_na()
palmsDisc <- palms %>%
select(1, 6:8) %>%
drop_na() %>%
filter(Climbing != 2 & Acaulescent != 2 & Erect != 2)
palms <- inner_join(palmsDisc, palmCont)
climb0 <- palms %>% filter(Climbing == 0)
climb1 <- palms %>% filter(Climbing == 1)
acaul0 <- palms %>% filter(Acaulescent == 0)
acaul1 <- palms %>% filter(Acaulescent == 1)
erect0 <- palms %>% filter(Erect == 0)
erect1 <- palms %>% filter(Erect == 1)
View(erect1)
hist(climb0$Max_Blade_Length_m, ylim = c(0, 40), xlim = c(0.5, 2))
View(climb0)
hist(climb0$Max_Blade_Length_m, ylim = c(0, 40), xlim = c(0, 10))
hist(climb0$Max_Blade_Length_m, ylim = c(0, 500), xlim = c(0, 10))
hist(climb0$Max_Blade_Length_m, ylim = c(0, 1000), xlim = c(0, 10))
hist(climb0$Max_Blade_Length_m, ylim = c(0, 800), xlim = c(0, 10))
hist(climb0$Max_Blade_Length_m, ylim = c(0, 1000), xlim = c(0, 10))
hist(climb0$Max_Blade_Length_m, ylim = c(0, 1000), xlim = c(0, 15))
hist(climb0$Max_Blade_Length_m, ylim = c(0, 1000), xlim = c(0, 20))
hist(climb1$Max_Blade_Length_m, add = TRUE, col = "red")
hist(acaul1$Max_Blade_Length_m, add = TRUE, col = "red")
hist(acaul0$Max_Blade_Length_m, ylim = c(0, 1000), xlim = c(0, 20))
hist(acaul1$Max_Blade_Length_m, add = TRUE, col = "red")
hist(erect1$Max_Blade_Length_m, ylim = c(0, 1000), xlim = c(0, 20))
hist(climb1$Max_Blade_Length_m, add = TRUE, col = "red")
hist(acaul1$Max_Blade_Length_m, add = TRUE, col = "yellow")
hist(erect1$Max_Blade_Length_m, ylim = c(0, 1000), xlim = c(0, 20))
hist(acaul1$Max_Blade_Length_m, add = TRUE, col = "yellow")
hist(climb1$Max_Blade_Length_m, add = TRUE, col = "red")
hist(erect1$Max_Blade_Length_m, ylim = c(0, 1000), xlim = c(0, 20), breaks = 0.05)
hist(erect1$Max_Blade_Length_m, breaks = 0.05, ylim = c(0, 1000), xlim = c(0, 20))
?hist
hist(erect1$Max_Blade_Length_m, breaks = 100, ylim = c(0, 1000), xlim = c(0, 20))
hist(erect1$Max_Blade_Length_m, breaks = 100, ylim = c(0, 200), xlim = c(0, 20))
hist(erect1$Max_Blade_Length_m, breaks = 100, ylim = c(0, 150), xlim = c(0, 20))
hist(acaul1$Max_Blade_Length_m, add = TRUE, col = "yellow")
hist(erect1$Max_Blade_Length_m, breaks = 100, ylim = c(0, 150), xlim = c(0, 20))
hist(acaul1$Max_Blade_Length_m, add = TRUE, col = "yellow", breaks = 10)
hist(acaul1$Max_Blade_Length_m, add = TRUE, col = "yellow", breaks = 100)
hist(erect1$Max_Blade_Length_m, breaks = 100, ylim = c(0, 150), xlim = c(0, 20))
hist(acaul1$Max_Blade_Length_m, add = TRUE, col = "yellow", breaks = 100)
hist(erect1$Max_Blade_Length_m, breaks = 50, ylim = c(0, 150), xlim = c(0, 20))
hist(erect1$Max_Blade_Length_m, breaks = 50, ylim = c(0, 300), xlim = c(0, 20))
hist(acaul1$Max_Blade_Length_m, add = TRUE, col = "yellow", breaks = 50)
hist(climb1$Max_Blade_Length_m, add = TRUE, col = "red", breaks = 50)
hist(climb1$Max_Blade_Length_m, add = TRUE, col = "red", breaks = 20)
hist(erect1$Max_Blade_Length_m, breaks = 50, ylim = c(0, 300), xlim = c(0, 20))
hist(acaul1$Max_Blade_Length_m, add = TRUE, col = "yellow", breaks = 50)
hist(climb1$Max_Blade_Length_m, add = TRUE, col = "red", breaks = 20)
hist(erect1$Max_Blade_Length_m, breaks = 50, ylim = c(0, 300), xlim = c(0, 20))
hist(climb1$Max_Blade_Length_m, add = TRUE, col = "red", breaks = 20)
hist(acaul1$Max_Blade_Length_m, add = TRUE, col = "yellow", breaks = 50)
hist(erect1$AverageFruitLength_cm, breaks = 50, ylim = c(0, 300), xlim = c(0, 20))
hist(erect1$AverageFruitLength_cm, breaks = 100, ylim = c(0, 300), xlim = c(0, 20))
hist(erect1$AverageFruitLength_cm, breaks = 100, ylim = c(0, 500), xlim = c(0, 20))
hist(erect1$AverageFruitLength_cm, breaks = 100, ylim = c(0, 400), xlim = c(0, 20))
hist(acaul1$AverageFruitLength_cm, add = TRUE, col = "yellow", breaks = 100)
hist(acaul1$AverageFruitLength_cm, add = TRUE, col = "yellow", breaks = 50)
hist(acaul1$AverageFruitLength_cm, add = TRUE, col = "yellow", breaks = 20)
hist(erect1$AverageFruitLength_cm, breaks = 100, ylim = c(0, 400), xlim = c(0, 20))
hist(acaul1$AverageFruitLength_cm, add = TRUE, col = "yellow", breaks = 20)
hist(climb1$AverageFruitLength_cm, add = TRUE, col = "red", breaks = 20)
hist(erect1$AverageFruitLength_cm, breaks = 100, ylim = c(0, 400), xlim = c(0, 20))
hist(climb1$AverageFruitLength_cm, add = TRUE, col = "red", breaks = 10)
hist(acaul1$AverageFruitLength_cm, add = TRUE, col = "yellow", breaks = 20)
var(palms$Max_Blade_Length_m)
var(palms$AverageFruitLength_cm)
palmsJoined <- climb1 + acaul1 + erect1
palmsJoined <- full_join(climb1, acaul1)
palmsJoined <- full_join(palmsJoined + erect1)
palmsJoined <- full_join(palmsJoined, erect1)
climb1 <- palms %>% filter(Climbing == 1) %>%
mutate(Form = 0)
climb1 <- palms %>% filter(Climbing == 1) %>%
mutate(Form = 0)
acaul1 <- palms %>% filter(Acaulescent == 1) %>%
mutate(Form = 1)
erect1 <- palms %>% filter(Erect == 1) %>%
mutate(Form = 2)
palmsJoined <- full_join(climb1, acaul1)
palmsJoined <- full_join(palmsJoined, erect1)
palmsJoined <- full_join(climb1, acaul1)
palmsJoined <- full_join(palmsJoined, erect1) %>%
select(1, 5:7)
View(palmsJoined)
palmsDisc <- palmsJoined %>% select(1, 4)
palmsCont <- palmsJoined %>% select(1:3)
unique(palmsDisc$Form)
?write.nexus.data
write.nexus.data(palmsDisc, file = "palmsDiscrete.nex", format = "standard")
write.nexus.data(palmsCont, file = "palmsContinuous.nex", format = "continuous")
for (i in 1:length(palmsDisc$SpecName)){
DiscTrait[[palmsDisc[i]]]$Form = palmsDisc$Form[i]
}
DiscTrait <- list()
for (i in 1:length(palmsDisc$SpecName)){
DiscTrait[[palmsDisc[i]]]$Form = palmsDisc$Form[i]
}
palmsDisc[i]
palmsDisc[[i]]
palmsDisc[[i]]
palmsDisc[[1]][i]
palmsDisc[[2]][i]
palmsDisc$Form[i]
palmsDisc$SpecName[i]
for (i in 1:length(palmsDisc$SpecName)){
DiscTrait[[palmsDisc$SpecName[i]]]$Form = palmsDisc$Form[i]
}
ContTrait <- list()
for (i in 1:length(palmsCont$SpecName)){
ContTrait[[palmsCont$SpecName[i]]]$maxBlade = palmsCont$Max_Blade_Length_m[i]
ContTrait[[palmsCont$SpecName[i]]]$avgFruit = palmsCont$AverageFruitLength_cm[i]
}
View(ContTrait)
View(ContTrait)
write.nexus.data(DiscTrait, file = "palmsDiscrete.nex", format = "standard")
write.nexus.data(ContTrait, file = "palmsContinuous.nex", format = "continuous")
library(RRphylo)
tree <- read.nexus("TREE.nex")
prunedTree <- keep.tip(tree, palmsJoined$SpecName)
is.binary(tree)
omitSpecName <- c("Calamus_wailong",
"Iguanura_speciosa",
"Syagrus_campos-portoana",
"Syagrus_costae",
"Syagrus_matafome",
"Syagrus_tostana")
palmsCont %>%
filter(!(SpecName %in% omitSpecName))
palmsCont_omit <- palmsCont %>%
filter(!(SpecName %in% omitSpecName))
palmsDisc_omit <- palmsDisc %>%
filter(!(SpecName %in% omitSpecName))
for (i in 1:length(palmsCont_omit$SpecName)){
ContTrait[[palmsCont_omit$SpecName[i]]]$maxBlade = palmsCont_omit$Max_Blade_Length_m[i]
ContTrait[[palmsCont_omit$SpecName[i]]]$avgFruit = palmsCont_omit$AverageFruitLength_cm[i]
}
ContTrait <- list()
for (i in 1:length(palmsCont_omit$SpecName)){
ContTrait[[palmsCont_omit$SpecName[i]]]$maxBlade = palmsCont_omit$Max_Blade_Length_m[i]
ContTrait[[palmsCont_omit$SpecName[i]]]$avgFruit = palmsCont_omit$AverageFruitLength_cm[i]
}
DiscTrait <- list()
DiscTrait[[palmsDisc_omit$SpecName[i]]]$Form = palmsDisc_omit$Form[i]
for (i in 1:length(palmsDisc_omit$SpecName)){
DiscTrait[[palmsDisc_omit$SpecName[i]]]$Form = palmsDisc_omit$Form[i]
}
write.nexus.data(DiscTrait, file = "palmsDiscrete.nex", format = "standard")
write.nexus.data(ContTrait, file = "palmsContinuous.nex", format = "continuous")
prunedTree <- keep.tip(tree, palmsCont_omit$SpecName)
#check for polytomy
is.binary(prunedTree)
write.tree(prunedTree, "palmPruned.tre")
var(palmsCont_omit$Max_Blade_Length_m)
var(palmsCont_omit$AverageFruitLength_cm)
